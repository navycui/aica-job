{"ast":null,"code":"import dayjs from 'shared/libs/dayjs';\nimport { mutate } from 'swr';\nimport axios from \"axios\";\nlet store = {};\nexport const RequestToken = async () => {\n  const res = await axios({\n    url: '/member/api/login/refresh-token/insider',\n    method: 'post'\n  });\n  set(res.data);\n};\n_c = RequestToken;\nexport const get = key => {\n  if (!!key) {\n    return store[key];\n  }\n\n  return store;\n};\nexport const getToken = () => {\n  return get().accessToken;\n};\nexport const set = value => {\n  store = { ...value,\n    updateAt: +new Date(),\n    accessTokenExpiresAt: dayjs().millisecond(value.accessTokenExpiresIn).valueOf(),\n    refreshTokenExpiresAt: dayjs().millisecond(value.refreshTokenExpiresIn).valueOf()\n  }; // console.log(useSWRConfig());\n\n  mutate('authentication', store);\n};\nexport const remove = () => {\n  store = {};\n  mutate('authentication', store);\n};\nexport default {\n  get,\n  set,\n  remove,\n  getToken\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestToken\");","map":{"version":3,"names":["dayjs","mutate","axios","store","RequestToken","res","url","method","set","data","get","key","getToken","accessToken","value","updateAt","Date","accessTokenExpiresAt","millisecond","accessTokenExpiresIn","valueOf","refreshTokenExpiresAt","refreshTokenExpiresIn","remove"],"sources":["/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/authentication/index.ts"],"sourcesContent":["import dayjs from 'shared/libs/dayjs';\nimport { mutate } from 'swr';\nimport axios from \"axios\";\n\nexport type AuthenticationType = {\n  accessToken: string;\n  accessTokenExpiresIn: number;\n  accessTokenExpiresAt: number;\n  grantType: string;\n  refreshToken: string;\n  refreshTokenExpiresIn: number;\n  refreshTokenExpiresAt: number;\n  updateAt: number;\n};\n\nlet store: any = {};\n\ntype keys = keyof AuthenticationType;\nexport const RequestToken = async() => {\n  const res = await axios({\n    url: '/member/api/login/refresh-token/insider',\n    method: 'post',\n  });\n\n  set(res.data);\n}\n\nexport const get = (key?: keys) => {\n  if (!!key) {\n    return store[key];\n  }\n  return store as AuthenticationType;\n};\n\nexport const getToken = (): AuthenticationType => {\n  return get().accessToken;\n};\n\nexport const set = (value: AuthenticationType) => {\n  store = {\n    ...value,\n    updateAt: +new Date(),\n    accessTokenExpiresAt: dayjs()\n      .millisecond(value.accessTokenExpiresIn)\n      .valueOf(),\n    refreshTokenExpiresAt: dayjs()\n      .millisecond(value.refreshTokenExpiresIn)\n      .valueOf(),\n  };\n\n  // console.log(useSWRConfig());\n  mutate('authentication', store);\n};\n\nexport const remove = () => {\n  store = {};\n  mutate('authentication', store);\n};\n\nexport default {\n  get,\n  set,\n  remove,\n  getToken,\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAaA,IAAIC,KAAU,GAAG,EAAjB;AAGA,OAAO,MAAMC,YAAY,GAAG,YAAW;EACrC,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAAC;IACtBI,GAAG,EAAE,yCADiB;IAEtBC,MAAM,EAAE;EAFc,CAAD,CAAvB;EAKAC,GAAG,CAACH,GAAG,CAACI,IAAL,CAAH;AACD,CAPM;KAAML,Y;AASb,OAAO,MAAMM,GAAG,GAAIC,GAAD,IAAgB;EACjC,IAAI,CAAC,CAACA,GAAN,EAAW;IACT,OAAOR,KAAK,CAACQ,GAAD,CAAZ;EACD;;EACD,OAAOR,KAAP;AACD,CALM;AAOP,OAAO,MAAMS,QAAQ,GAAG,MAA0B;EAChD,OAAOF,GAAG,GAAGG,WAAb;AACD,CAFM;AAIP,OAAO,MAAML,GAAG,GAAIM,KAAD,IAA+B;EAChDX,KAAK,GAAG,EACN,GAAGW,KADG;IAENC,QAAQ,EAAE,CAAC,IAAIC,IAAJ,EAFL;IAGNC,oBAAoB,EAAEjB,KAAK,GACxBkB,WADmB,CACPJ,KAAK,CAACK,oBADC,EAEnBC,OAFmB,EAHhB;IAMNC,qBAAqB,EAAErB,KAAK,GACzBkB,WADoB,CACRJ,KAAK,CAACQ,qBADE,EAEpBF,OAFoB;EANjB,CAAR,CADgD,CAYhD;;EACAnB,MAAM,CAAC,gBAAD,EAAmBE,KAAnB,CAAN;AACD,CAdM;AAgBP,OAAO,MAAMoB,MAAM,GAAG,MAAM;EAC1BpB,KAAK,GAAG,EAAR;EACAF,MAAM,CAAC,gBAAD,EAAmBE,KAAnB,CAAN;AACD,CAHM;AAKP,eAAe;EACbO,GADa;EAEbF,GAFa;EAGbe,MAHa;EAIbX;AAJa,CAAf"},"metadata":{},"sourceType":"module"}