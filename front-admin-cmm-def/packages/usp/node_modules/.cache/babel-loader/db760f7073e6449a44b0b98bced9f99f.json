{"ast":null,"code":"var _jsxFileName = \"/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/layout/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport authentication from 'shared/authentication';\nimport ExtendValidTime from 'shared/components/ExtendValidTime';\nimport dayjs from 'shared/libs/dayjs';\nimport fetchRefreshToken from '../fetches';\nimport AdminLayout from \"./AdminLayout/AdminLayout\";\nimport Studio from \"./Studio\";\nimport Space from \"./Space\";\nimport Empty from \"./Empty\";\nimport { useRouteStore } from \"../Store/RouteConfig\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Layout = props => {\n  _s();\n\n  const navigate = useNavigate(); // const {data} = useSWR<AuthenticationType>('authentication');\n\n  const config = useRouteStore(); //* 토근 갱신\n\n  const handleRefresh = () => {\n    fetchRefreshToken().then(res => authentication.set(res.data));\n  }; //* 토큰 만료\n\n\n  const handleExpired = () => {// window.location.href = '/signout';\n  };\n\n  const syncNavigate = () => {\n    //* 마지막으로 업데이트 한 시간으로 부터 2초 이상 이면 갱신\n    const data = authentication.get();\n\n    if (!!data && dayjs().diff(data.updateAt, 's') > 1) {\n      handleRefresh();\n    }\n  };\n\n  useEffect(syncNavigate, [navigate]);\n  useEffect(() => {\n    if (config.middleware.includes(\"auth\") && !authentication.getToken()) {\n      navigate(`/tsp-admin/signin?nextUrl=${window.btoa(window.location.href)}`);\n    }\n  }, [config.middleware]);\n\n  if (config.middleware.includes('factor')) {\n    const key = sessionStorage.getItem('__FACTOR_KEY__');\n\n    if (!key) {\n      // window.location.href = `/factor?nextUrl=${window.btoa(\n      //   window.location.href\n      // )}`;\n      navigate(`/factor?nextUrl=${window.btoa(window.location.href)}`);\n    }\n  }\n\n  const type = config.layout.replace(/^\\w/, function (a) {\n    return a.toUpperCase();\n  });\n  const Component = {\n    Studio,\n    Space,\n    Empty,\n    AdminLayout\n  }[type];\n  return ___EmotionJSX(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, ___EmotionJSX(Component, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, props.children), ___EmotionJSX(ExtendValidTime, {\n    onRefresh: handleRefresh,\n    onExpired: handleExpired,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(Layout, \"50p4+Zp3GEfh5i/9yVHT9ABgzZs=\", false, function () {\n  return [useNavigate, useRouteStore];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","Fragment","useEffect","useNavigate","authentication","ExtendValidTime","dayjs","fetchRefreshToken","AdminLayout","Studio","Space","Empty","useRouteStore","Layout","props","navigate","config","handleRefresh","then","res","set","data","handleExpired","syncNavigate","get","diff","updateAt","middleware","includes","getToken","window","btoa","location","href","key","sessionStorage","getItem","type","layout","replace","a","toUpperCase","Component","children"],"sources":["/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/layout/index.tsx"],"sourcesContent":["import React, {Fragment, lazy, useEffect} from 'react';\nimport {useLocation, useNavigate} from 'react-router-dom';\nimport authentication, {AuthenticationType} from 'shared/authentication';\nimport ExtendValidTime from 'shared/components/ExtendValidTime';\nimport dayjs from 'shared/libs/dayjs';\nimport useSWR from 'swr';\nimport fetchRefreshToken from '../fetches';\nimport AdminLayout from \"./AdminLayout/AdminLayout\";\nimport Studio from \"./Studio\";\nimport Space from \"./Space\";\nimport Empty from \"./Empty\";\nimport {useRouteStore} from \"../Store/RouteConfig\";\n\nexport type LayoutType = 'studio' | 'promotion' | 'space' | 'paper' | 'empty' | 'adminLayout';\n\nconst Layout: React.FC = props => {\n  const navigate = useNavigate()\n  // const {data} = useSWR<AuthenticationType>('authentication');\n  const config = useRouteStore()\n\n  //* 토근 갱신\n  const handleRefresh = () => {\n    fetchRefreshToken().then((res) => authentication.set(res.data));\n  };\n\n  //* 토큰 만료\n  const handleExpired = () => {\n    // window.location.href = '/signout';\n  };\n\n  const syncNavigate = () => {\n    //* 마지막으로 업데이트 한 시간으로 부터 2초 이상 이면 갱신\n    const data = authentication.get()\n    if (!!data && dayjs().diff(data!.updateAt, 's') > 1) {\n      handleRefresh();\n    }\n  };\n\n  useEffect(syncNavigate, [navigate]);\n\n  useEffect(() => {\n    if (config.middleware.includes(\"auth\") && !authentication.getToken()) {\n    navigate(`/tsp-admin/signin?nextUrl=${window.btoa(window.location.href)}`)\n  }}, [config.middleware]);\n\n\n  if (config.middleware.includes('factor')) {\n    const key = sessionStorage.getItem('__FACTOR_KEY__');\n    if (!key) {\n      // window.location.href = `/factor?nextUrl=${window.btoa(\n      //   window.location.href\n      // )}`;\n      navigate(`/factor?nextUrl=${window.btoa(window.location.href)}`)\n    }\n  }\n\n  const type = config.layout.replace(/^\\w/, function (a) {\n    return a.toUpperCase();\n  });\n  const Component: any = {Studio, Space, Empty, AdminLayout}[type];\n\n  return <Fragment>\n    <Component>{props.children}</Component>\n    <ExtendValidTime onRefresh={handleRefresh} onExpired={handleExpired}/>\n  </Fragment>\n}\n\nexport default Layout;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA+BC,SAA/B,QAA+C,OAA/C;AACA,SAAqBC,WAArB,QAAuC,kBAAvC;AACA,OAAOC,cAAP,MAAiD,uBAAjD;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,iBAAP,MAA8B,YAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,aAAR,QAA4B,sBAA5B;;;AAIA,MAAMC,MAAgB,GAAGC,KAAK,IAAI;EAAA;;EAChC,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CADgC,CAEhC;;EACA,MAAMa,MAAM,GAAGJ,aAAa,EAA5B,CAHgC,CAKhC;;EACA,MAAMK,aAAa,GAAG,MAAM;IAC1BV,iBAAiB,GAAGW,IAApB,CAA0BC,GAAD,IAASf,cAAc,CAACgB,GAAf,CAAmBD,GAAG,CAACE,IAAvB,CAAlC;EACD,CAFD,CANgC,CAUhC;;;EACA,MAAMC,aAAa,GAAG,MAAM,CAC1B;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAG,MAAM;IACzB;IACA,MAAMF,IAAI,GAAGjB,cAAc,CAACoB,GAAf,EAAb;;IACA,IAAI,CAAC,CAACH,IAAF,IAAUf,KAAK,GAAGmB,IAAR,CAAaJ,IAAI,CAAEK,QAAnB,EAA6B,GAA7B,IAAoC,CAAlD,EAAqD;MACnDT,aAAa;IACd;EACF,CAND;;EAQAf,SAAS,CAACqB,YAAD,EAAe,CAACR,QAAD,CAAf,CAAT;EAEAb,SAAS,CAAC,MAAM;IACd,IAAIc,MAAM,CAACW,UAAP,CAAkBC,QAAlB,CAA2B,MAA3B,KAAsC,CAACxB,cAAc,CAACyB,QAAf,EAA3C,EAAsE;MACtEd,QAAQ,CAAE,6BAA4Be,MAAM,CAACC,IAAP,CAAYD,MAAM,CAACE,QAAP,CAAgBC,IAA5B,CAAkC,EAAhE,CAAR;IACD;EAAC,CAHO,EAGL,CAACjB,MAAM,CAACW,UAAR,CAHK,CAAT;;EAMA,IAAIX,MAAM,CAACW,UAAP,CAAkBC,QAAlB,CAA2B,QAA3B,CAAJ,EAA0C;IACxC,MAAMM,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAZ;;IACA,IAAI,CAACF,GAAL,EAAU;MACR;MACA;MACA;MACAnB,QAAQ,CAAE,mBAAkBe,MAAM,CAACC,IAAP,CAAYD,MAAM,CAACE,QAAP,CAAgBC,IAA5B,CAAkC,EAAtD,CAAR;IACD;EACF;;EAED,MAAMI,IAAI,GAAGrB,MAAM,CAACsB,MAAP,CAAcC,OAAd,CAAsB,KAAtB,EAA6B,UAAUC,CAAV,EAAa;IACrD,OAAOA,CAAC,CAACC,WAAF,EAAP;EACD,CAFY,CAAb;EAGA,MAAMC,SAAc,GAAG;IAACjC,MAAD;IAASC,KAAT;IAAgBC,KAAhB;IAAuBH;EAAvB,EAAoC6B,IAApC,CAAvB;EAEA,OAAO,cAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,cAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAYvB,KAAK,CAAC6B,QAAlB,CADK,EAEL,cAAC,eAAD;IAAiB,SAAS,EAAE1B,aAA5B;IAA2C,SAAS,EAAEK,aAAtD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFK,CAAP;AAID,CAlDD;;GAAMT,M;UACaV,W,EAEFS,a;;;KAHXC,M;AAoDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}