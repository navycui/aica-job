{"ast":null,"code":"var _jsxFileName = \"/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/components/ExtendValidTime/ExtendValidTime.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport useSWR from 'swr';\nimport dayjs from '../../libs/dayjs';\nimport { ModalComponents } from \"../../components/ModalComponents\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nfunction ExtendValidTime(_ref) {\n  _s();\n\n  let {\n    onRefresh = () => {},\n    onExpired = () => {}\n  } = _ref;\n  const [countdown, setCountdown] = useState(1e10);\n  const [open, setOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const {\n    data\n  } = useSWR('authentication');\n  const timer = useRef(null); //* 로그인 연장\n\n  const handleClick = () => {\n    onRefresh();\n  };\n\n  const handleUpdate = () => {\n    const diff = dayjs(data === null || data === void 0 ? void 0 : data.refreshTokenExpiresAt).diff(+new Date(), 's');\n    setCountdown(diff);\n  };\n\n  const format = seconds => {\n    const minute = Math.floor(seconds / 60);\n    const second = seconds - minute * 60;\n    return `${minute}분 ${second}초`;\n  }; //* authentication 데이터 변경시\n\n\n  const syncAuthentication = () => {\n    clearInterval(timer.current);\n\n    if (data !== null && data !== void 0 && data.accessTokenExpiresAt) {\n      timer.current = setInterval(handleUpdate, 1000);\n      handleUpdate();\n    }\n\n    return () => {\n      clearInterval(timer.current);\n    };\n  };\n\n  useEffect(syncAuthentication, [data]);\n\n  const syncCountdown = () => {\n    //* 시간 초과시 로그아웃\n    if (countdown <= 0) {\n      clearInterval(timer.current);\n      onExpired();\n    }\n\n    if (!open && refresh && countdown < 60 * 5) {\n      setOpen(true);\n    }\n  };\n\n  useEffect(syncCountdown, [countdown]);\n\n  const init = () => {};\n\n  useEffect(init, []); //* 5분 미만인 경우 표시\n\n  return countdown < 60 * 5 ? ___EmotionJSX(ModalComponents, {\n    isDist: true,\n    open: open,\n    confirmLabel: '연장',\n    content: `남은 시간: ${format(countdown)}`,\n    onConfirm: handleClick,\n    onClose: () => {\n      setOpen(false);\n      setRefresh(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }) // <Portal>\n  //   <div css={styles.container}>\n  //     <div>남은 시간: {format(countdown)}</div>\n  //     <button type=\"button\" onClick={handleClick}>\n  //       연장\n  //     </button>\n  //   </div>\n  // </Portal>\n  : null;\n}\n\n_s(ExtendValidTime, \"Da4FSF8VnR1F3oq9+juCKdcpqz8=\", false, function () {\n  return [useSWR];\n});\n\n_c = ExtendValidTime;\nexport default ExtendValidTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExtendValidTime\");","map":{"version":3,"names":["useEffect","useRef","useState","useSWR","dayjs","ModalComponents","ExtendValidTime","onRefresh","onExpired","countdown","setCountdown","open","setOpen","refresh","setRefresh","data","timer","handleClick","handleUpdate","diff","refreshTokenExpiresAt","Date","format","seconds","minute","Math","floor","second","syncAuthentication","clearInterval","current","accessTokenExpiresAt","setInterval","syncCountdown","init"],"sources":["/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/components/ExtendValidTime/ExtendValidTime.tsx"],"sourcesContent":["import {useEffect, useRef, useState} from 'react';\nimport useSWR from 'swr';\nimport {AuthenticationType} from '../../authentication';\nimport dayjs from '../../libs/dayjs';\nimport Portal from '../Portal';\nimport * as styles from './styles';\nimport {ModalComponents} from \"../../components/ModalComponents\";\n\ntype PropsType = {\n  onRefresh: () => void;\n  onExpired: () => void;\n};\n\nfunction ExtendValidTime(\n  {\n    onRefresh = () => {\n    },\n    onExpired = () => {\n    },\n  }: PropsType) {\n  const [countdown, setCountdown] = useState(1e10);\n  const [open, setOpen] = useState(false)\n  const [refresh, setRefresh] = useState(true)\n  const {data} = useSWR<AuthenticationType>('authentication');\n\n  const timer = useRef<any>(null);\n\n  //* 로그인 연장\n  const handleClick = () => {\n    onRefresh();\n  };\n\n  const handleUpdate = () => {\n    const diff = dayjs(data?.refreshTokenExpiresAt).diff(+new Date(), 's');\n    setCountdown(diff);\n  };\n\n  const format = (seconds: number) => {\n    const minute = Math.floor(seconds / 60);\n    const second = seconds - minute * 60;\n    return `${minute}분 ${second}초`;\n  };\n\n  //* authentication 데이터 변경시\n  const syncAuthentication = () => {\n    clearInterval(timer.current);\n    if (data?.accessTokenExpiresAt) {\n      timer.current = setInterval(handleUpdate, 1000);\n      handleUpdate();\n    }\n    return () => {\n      clearInterval(timer.current);\n    };\n  };\n  useEffect(syncAuthentication, [data]);\n\n  const syncCountdown = () => {\n    //* 시간 초과시 로그아웃\n    if (countdown <= 0) {\n      clearInterval(timer.current);\n      onExpired();\n    }\n\n    if (!open && refresh && countdown < 60 * 5) {\n      setOpen(true)\n    }\n  };\n  useEffect(syncCountdown, [countdown]);\n\n  const init = () => {\n  };\n  useEffect(init, []);\n\n  //* 5분 미만인 경우 표시\n  return countdown < 60 * 5 ? (\n    <ModalComponents\n      isDist open={open} confirmLabel={'연장'}\n      content={`남은 시간: ${format(countdown)}`}\n      onConfirm={handleClick}\n      onClose={() => {\n        setOpen(false)\n        setRefresh(false)\n      }}\n    />\n    // <Portal>\n    //   <div css={styles.container}>\n    //     <div>남은 시간: {format(countdown)}</div>\n    //     <button type=\"button\" onClick={handleClick}>\n    //       연장\n    //     </button>\n    //   </div>\n    // </Portal>\n  ) : null;\n}\n\nexport default ExtendValidTime;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}