{"ast":null,"code":"import create from \"zustand\";\nexport const useRouteStore = create(set => ({\n  record: [],\n  routes: [],\n  memberServerUrl: `${process.env.REACT_APP_DOMAIN_MEMBER_BNET}`,\n  layout: \"studio\",\n  defaultLayout: \"studio\",\n  middleware: [],\n  setMemberServer: url => {\n    set(state => ({\n      memberServerUrl: url\n    }));\n  },\n  setLayout: layout => {\n    set(state => ({\n      layout: layout\n    }));\n  },\n  setDefaultLayout: layout => {\n    set(state => ({\n      defaultLayout: layout\n    }));\n  },\n  setMiddleware: middleware => {\n    set(state => ({\n      middleware: middleware\n    }));\n  },\n  setRoutes: routes => {\n    set(state => ({\n      routes: routes\n    }));\n  },\n  setRecord: record => {\n    set(state => ({\n      record: record\n    }));\n  }\n}));","map":{"version":3,"names":["create","useRouteStore","set","record","routes","memberServerUrl","process","env","REACT_APP_DOMAIN_MEMBER_BNET","layout","defaultLayout","middleware","setMemberServer","url","state","setLayout","setDefaultLayout","setMiddleware","setRoutes","setRecord"],"sources":["/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/Store/RouteConfig.ts"],"sourcesContent":["import create from \"zustand\";\nimport {LayoutType} from \"../layout\";\nimport {RouteData} from \"../utils/RouteUtiles\";\n\ninterface State{\n  record: RouteData[]\n  routes: RouteData[]\n  memberServerUrl: string\n  layout: LayoutType\n  defaultLayout: LayoutType\n  middleware: string[]\n\n  setMemberServer: (url: string) => void\n  setLayout: (layout: LayoutType) => void\n  setDefaultLayout: (layout: LayoutType) => void\n  setMiddleware: (middleware: string[]) => void\n  setRoutes: (routes: RouteData[]) => void\n  setRecord: (record: RouteData[]) => void\n}\n\nexport const useRouteStore = create<State>( set => ({\n  record: [],\n  routes: [],\n  memberServerUrl: `${process.env.REACT_APP_DOMAIN_MEMBER_BNET}`,\n  layout: \"studio\",\n  defaultLayout: \"studio\",\n  middleware: [],\n\n  setMemberServer: (url: string) => {\n    set(state => ({\n      memberServerUrl: url\n    }))\n  },\n  setLayout: (layout: LayoutType) => {\n    set(state => ({\n      layout: layout\n    }))\n  },\n  setDefaultLayout: (layout: LayoutType) => {\n    set(state => ({\n      defaultLayout: layout\n    }))\n  },\n  setMiddleware: (middleware: string[]) => {\n    set(state => ({\n      middleware: middleware\n    }))\n  },\n  setRoutes: (routes: RouteData[]) => {\n    set(state => ({\n      routes: routes\n    }))\n  },\n  setRecord: (record: RouteData[]) => {\n    set(state => ({\n      record: record\n    }))\n  },\n}))"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AAoBA,OAAO,MAAMC,aAAa,GAAGD,MAAM,CAASE,GAAG,KAAK;EAClDC,MAAM,EAAE,EAD0C;EAElDC,MAAM,EAAE,EAF0C;EAGlDC,eAAe,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,4BAA6B,EAHX;EAIlDC,MAAM,EAAE,QAJ0C;EAKlDC,aAAa,EAAE,QALmC;EAMlDC,UAAU,EAAE,EANsC;EAQlDC,eAAe,EAAGC,GAAD,IAAiB;IAChCX,GAAG,CAACY,KAAK,KAAK;MACZT,eAAe,EAAEQ;IADL,CAAL,CAAN,CAAH;EAGD,CAZiD;EAalDE,SAAS,EAAGN,MAAD,IAAwB;IACjCP,GAAG,CAACY,KAAK,KAAK;MACZL,MAAM,EAAEA;IADI,CAAL,CAAN,CAAH;EAGD,CAjBiD;EAkBlDO,gBAAgB,EAAGP,MAAD,IAAwB;IACxCP,GAAG,CAACY,KAAK,KAAK;MACZJ,aAAa,EAAED;IADH,CAAL,CAAN,CAAH;EAGD,CAtBiD;EAuBlDQ,aAAa,EAAGN,UAAD,IAA0B;IACvCT,GAAG,CAACY,KAAK,KAAK;MACZH,UAAU,EAAEA;IADA,CAAL,CAAN,CAAH;EAGD,CA3BiD;EA4BlDO,SAAS,EAAGd,MAAD,IAAyB;IAClCF,GAAG,CAACY,KAAK,KAAK;MACZV,MAAM,EAAEA;IADI,CAAL,CAAN,CAAH;EAGD,CAhCiD;EAiClDe,SAAS,EAAGhB,MAAD,IAAyB;IAClCD,GAAG,CAACY,KAAK,KAAK;MACZX,MAAM,EAAEA;IADI,CAAL,CAAN,CAAH;EAGD;AArCiD,CAAL,CAAZ,CAA5B"},"metadata":{},"sourceType":"module"}