{"ast":null,"code":"import _extends from \"/Users/choi/react-workspace/front-admin-cmm-def/node_modules/@babel/runtime/helpers/esm/extends.js\";\n\nvar _jsxFileName = \"/Users/choi/react-workspace/front-admin-cmm-def/packages/usp/src/pages/Board/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport * as styles from './styles';\nimport dayjs from 'shared/libs/dayjs';\nimport useSWR from 'swr';\nimport api from '~/api';\nimport DataTable from '~/components/DataTable';\nimport Typography from '@mui/material/Typography';\nimport { LicenseInfo } from '@mui/x-license-pro';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nLicenseInfo.setLicenseKey('4710a3119913b38e70c5bdde0aad559eT1JERVI6NDMwNTgsRVhQSVJZPTE2ODMyNTE3MDAwMDAsS0VZVkVSU0lPTj0x');\n\nconst fetcher = function (url) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return api({\n    method: 'get',\n    url,\n    params: {\n      page: params.page + 1,\n      itemsPerPage: params.pageSize\n    }\n  });\n};\n\nexport default _s(() => {\n  _s();\n\n  const [pagination, setPagination] = useState({\n    page: 0,\n    pageSize: 3,\n    rowCount: 0\n  });\n  const [list, setList] = useState([]);\n  const {\n    data,\n    isValidating\n  } = useSWR([`/common/api/boards/usp-notice/articles`, pagination], fetcher);\n\n  const syncData = () => {\n    if (!!data) {\n      setList(() => data.list); // 게시물 총 갯수\n\n      setPagination(state => ({ ...state,\n        rowCount: data.totalItems\n      }));\n    }\n  };\n\n  useEffect(syncData, [data]);\n\n  const handleChange = page => {\n    setPagination(state => ({ ...state,\n      page\n    }));\n  };\n\n  const handleSizeChange = pageSize => {\n    setPagination(state => ({ ...state,\n      pageSize\n    }));\n  }; //* List 가 없을 때\n\n\n  if (!list.length) return ___EmotionJSX(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }\n  }, \"loading...\"); //* 데이터 로드 후 Datagrid 설정\n\n  const rows = list.map(v => {\n    return {\n      id: v.rn,\n      title: v.title,\n      updatedDt: dayjs(v.updatedDt).format('YYYY-MM-DD')\n    };\n  });\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 50,\n    headerAlign: 'center'\n  }, {\n    field: 'title',\n    headerName: '제목',\n    width: 150,\n    headerAlign: 'center'\n  }, {\n    field: 'updatedDt',\n    headerName: '업데이트',\n    width: 150,\n    headerAlign: 'center'\n  }];\n  return ___EmotionJSX(\"div\", {\n    css: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uBAA9\\uB85D\"), ___EmotionJSX(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Total: \", pagination.rowCount), ___EmotionJSX(DataTable, _extends({\n    loading: isValidating\n  }, pagination, {\n    columns,\n    rows,\n    onPageChange: handleChange,\n    onPageSizeChange: handleSizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  })));\n}, \"1LfwW/GTaQnCWY2bFBSLRzc/XEI=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"names":["useEffect","useState","styles","dayjs","useSWR","api","DataTable","Typography","LicenseInfo","setLicenseKey","fetcher","url","params","method","page","itemsPerPage","pageSize","pagination","setPagination","rowCount","list","setList","data","isValidating","syncData","state","totalItems","handleChange","handleSizeChange","length","rows","map","v","id","rn","title","updatedDt","format","columns","field","headerName","width","headerAlign","container"],"sources":["/Users/choi/react-workspace/front-admin-cmm-def/packages/usp/src/pages/Board/Board.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport * as styles from './styles';\nimport dayjs from 'shared/libs/dayjs';\nimport useSWR from 'swr';\nimport api from '~/api';\nimport DataTable from '~/components/DataTable';\nimport Typography from '@mui/material/Typography';\nimport { GridColumns } from '@mui/x-data-grid';\nimport { LicenseInfo } from '@mui/x-license-pro';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nLicenseInfo.setLicenseKey('4710a3119913b38e70c5bdde0aad559eT1JERVI6NDMwNTgsRVhQSVJZPTE2ODMyNTE3MDAwMDAsS0VZVkVSU0lPTj0x');\n\nconst fetcher = (url: string, params: any = {}) =>\n  api({\n    method: 'get',\n    url,\n    params: { page: params.page + 1, itemsPerPage: params.pageSize },\n  });\n\nexport default () => {\n  const [pagination, setPagination] = useState({\n    page: 0,\n    pageSize: 3,\n    rowCount: 0,\n  });\n\n  const [list, setList] = useState([]);\n\n  const { data, isValidating } = useSWR(\n    [`/common/api/boards/usp-notice/articles`, pagination],\n    fetcher\n  );\n\n  const syncData = () => {\n    if (!!data) {\n      setList(() => data.list);\n\n      // 게시물 총 갯수\n      setPagination((state) => ({ ...state, rowCount: data.totalItems }));\n    }\n  };\n  useEffect(syncData, [data]);\n\n  const handleChange = (page: number) => {\n    setPagination((state) => ({ ...state, page }));\n  };\n\n  const handleSizeChange = (pageSize: number) => {\n    setPagination((state) => ({ ...state, pageSize }));\n  };\n\n  //* List 가 없을 때\n  if (!list.length) return <div>loading...</div>;\n\n  //* 데이터 로드 후 Datagrid 설정\n  const rows = list.map((v: any) => {\n    return {\n      id: v.rn,\n      title: v.title,\n      updatedDt: dayjs(v.updatedDt).format('YYYY-MM-DD'),\n    };\n  });\n\n  const columns:GridColumns = [\n    { field: 'id', headerName: 'ID', width: 50, headerAlign: 'center' },\n    { field: 'title', headerName: '제목', width: 150, headerAlign: 'center' },\n    { field: 'updatedDt', headerName: '업데이트', width: 150, headerAlign: 'center' },\n  ];\n\n  return (\n    <div css={styles.container}>\n      <Typography variant=\"h6\" gutterBottom component=\"div\">\n        게시글 목록\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom component=\"span\">\n        Total: {pagination.rowCount}\n      </Typography>\n      <DataTable\n        loading={isValidating}\n        {...pagination}\n        {...{ columns, rows }}\n        onPageChange={handleChange}\n        onPageSizeChange={handleSizeChange}\n      />\n      {/* <DataGridProTest/> */}\n    </div>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}