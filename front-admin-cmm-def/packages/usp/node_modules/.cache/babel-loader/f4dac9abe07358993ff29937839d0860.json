{"ast":null,"code":"import _extends from \"/Users/choi/react-workspace/front-admin-cmm-def/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/components/CustomDataGride.tsx\";\nimport Box from '@mui/material/Box';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { Pagination } from \"../components/LayoutComponents\";\nimport * as React from \"react\";\nimport { LinearProgress } from \"@mui/material\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const DataTable = props => {\n  const options = Object.assign({\n    rowsPerPageOptions: [5, 10, 15]\n  }, props);\n  return ___EmotionJSX(Box, {\n    sx: {\n      width: '100%',\n      height: props.height ? props.height : '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, ___EmotionJSX(DataGridPro, _extends({}, options, {\n    loading: props.loading,\n    rows: props.rows // @ts-ignore\n    ,\n    columns: props.columns,\n    autoHeight: props.autoHeight,\n    checkboxSelection: props.isCheckBox,\n    hideFooter: props.hideFooter,\n    components: {\n      Footer,\n      ...{\n        LoadingOverlay: LinearProgress\n      }\n    },\n    componentsProps: {\n      footer: options\n    },\n    rowReordering: props.rowReordering,\n    onCellEditCommit: (params, event) => {\n      if (props.onCellEditCommit) props.onCellEditCommit(params);\n    },\n    onSelectionModelChange: (selectionModel, details) => {\n      if (props.onSelectionModelChange) props.onSelectionModelChange(selectionModel);\n    },\n    onRowOrderChange: props.onRowOrderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  })));\n};\n_c = DataTable;\n\nconst Footer = props => {\n  const handleChange = e => {\n    props.onPageSizeChange(e.target.value);\n  };\n\n  const totalPage = props.rowCount <= props.pageSize ? 1 : Math.floor(props.rowCount / props.pageSize + 1);\n  return ___EmotionJSX(Pagination, {\n    curPage: props.page,\n    totalPage: totalPage,\n    rowsPerPage: props.pageSize,\n    handleChangePage: (event, newPage) => {\n      props.onPageChange(newPage - 1);\n    },\n    handleChangeRowsPerPage: handleChange,\n    style: {\n      padding: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  });\n};\n\n_c2 = Footer;\nexport default DataTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataTable\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"names":["Box","DataGridPro","Pagination","React","LinearProgress","DataTable","props","options","Object","assign","rowsPerPageOptions","width","height","loading","rows","columns","autoHeight","isCheckBox","hideFooter","Footer","LoadingOverlay","footer","rowReordering","params","event","onCellEditCommit","selectionModel","details","onSelectionModelChange","onRowOrderChange","handleChange","e","onPageSizeChange","target","value","totalPage","rowCount","pageSize","Math","floor","page","newPage","onPageChange","padding"],"sources":["/Users/choi/react-workspace/front-admin-cmm-def/packages/shared/src/components/CustomDataGride.tsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport {DataGridPro, GridRowOrderChangeParams} from '@mui/x-data-grid-pro';\nimport {\n  DataGrid,\n  DataGridProps, GridCellEditCommitParams,\n  MuiBaseEvent, MuiEvent,\n} from '@mui/x-data-grid';\nimport {Pagination} from \"../components/LayoutComponents\";\nimport * as React from \"react\";\nimport {GridSelectionModel} from \"@mui/x-data-grid/models/gridSelectionModel\";\nimport {GridCallbackDetails} from \"@mui/x-data-grid/models/api\";\nimport {LinearProgress} from \"@mui/material\";\n\n\nexport const DataTable: React.FC<DataGridProps & {\n  height?: string\n  isCheckBox?: boolean\n  rowReordering?: boolean\n  autoHeight?: boolean\n  hideFooter?: boolean\n  onCellEditCommit?: (params: GridCellEditCommitParams) => void\n  onSelectionModelChange?: (selectionModel: GridSelectionModel) => void\n  onRowOrderChange?: (params: GridRowOrderChangeParams) => void\n}> = props => {\n  const options = Object.assign({rowsPerPageOptions: [5, 10, 15]}, props);\n\n  return <Box sx={{\n    width: '100%',\n    height: props.height ? props.height : '400px',\n  }}>\n    <DataGridPro\n      {...options}\n      loading={props.loading}\n      rows={props.rows}\n      // @ts-ignore\n      columns={props.columns}\n      autoHeight={props.autoHeight}\n      checkboxSelection={props.isCheckBox}\n      hideFooter={props.hideFooter}\n      components={{Footer, ...{LoadingOverlay: LinearProgress}}}\n      componentsProps={{footer: options}}\n      rowReordering={props.rowReordering}\n      onCellEditCommit={(params: GridCellEditCommitParams, event: MuiEvent<MuiBaseEvent>) => {\n        if (props.onCellEditCommit) props.onCellEditCommit(params)\n      }}\n      onSelectionModelChange={(selectionModel: GridSelectionModel, details: GridCallbackDetails) => {\n        if (props.onSelectionModelChange) props.onSelectionModelChange(selectionModel)\n      }}\n      onRowOrderChange={props.onRowOrderChange}\n    />\n  </Box>\n}\n\nconst Footer: React.FC<{\n  rowsPerPageOptions: number[],\n  rowCount: number,\n  pageSize: number,\n  page: number,\n  onPageSizeChange: (value: number) => void,\n  onPageChange: (value: number) => void,\n}> = props => {\n  const handleChange = (e: any) => {\n    props.onPageSizeChange(e.target.value);\n  };\n\n  const totalPage = props.rowCount <= props.pageSize ? 1 : Math.floor((props.rowCount / props.pageSize) + 1);\n\n  return <Pagination\n    curPage={props.page}\n    totalPage={totalPage}\n    rowsPerPage={props.pageSize}\n    handleChangePage={(event: unknown, newPage: number) => {\n      props.onPageChange(newPage - 1);\n    }}\n    handleChangeRowsPerPage={handleChange}\n    style={{padding: \"10px 0\"}}\n  />\n}\n\nexport default DataTable;\n"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,SAAQC,WAAR,QAAoD,sBAApD;AAMA,SAAQC,UAAR,QAAyB,gCAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SAAQC,cAAR,QAA6B,eAA7B;;AAGA,OAAO,MAAMC,SASX,GAAGC,KAAK,IAAI;EACZ,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;IAACC,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;EAArB,CAAd,EAAiDJ,KAAjD,CAAhB;EAEA,OAAO,cAAC,GAAD;IAAK,EAAE,EAAE;MACdK,KAAK,EAAE,MADO;MAEdC,MAAM,EAAEN,KAAK,CAACM,MAAN,GAAeN,KAAK,CAACM,MAArB,GAA8B;IAFxB,CAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAIL,cAAC,WAAD,eACML,OADN;IAEE,OAAO,EAAED,KAAK,CAACO,OAFjB;IAGE,IAAI,EAAEP,KAAK,CAACQ,IAHd,CAIE;IAJF;IAKE,OAAO,EAAER,KAAK,CAACS,OALjB;IAME,UAAU,EAAET,KAAK,CAACU,UANpB;IAOE,iBAAiB,EAAEV,KAAK,CAACW,UAP3B;IAQE,UAAU,EAAEX,KAAK,CAACY,UARpB;IASE,UAAU,EAAE;MAACC,MAAD;MAAS,GAAG;QAACC,cAAc,EAAEhB;MAAjB;IAAZ,CATd;IAUE,eAAe,EAAE;MAACiB,MAAM,EAAEd;IAAT,CAVnB;IAWE,aAAa,EAAED,KAAK,CAACgB,aAXvB;IAYE,gBAAgB,EAAE,CAACC,MAAD,EAAmCC,KAAnC,KAAqE;MACrF,IAAIlB,KAAK,CAACmB,gBAAV,EAA4BnB,KAAK,CAACmB,gBAAN,CAAuBF,MAAvB;IAC7B,CAdH;IAeE,sBAAsB,EAAE,CAACG,cAAD,EAAqCC,OAArC,KAAsE;MAC5F,IAAIrB,KAAK,CAACsB,sBAAV,EAAkCtB,KAAK,CAACsB,sBAAN,CAA6BF,cAA7B;IACnC,CAjBH;IAkBE,gBAAgB,EAAEpB,KAAK,CAACuB,gBAlB1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAJK,CAAP;AAyBD,CArCM;KAAMxB,S;;AAuCb,MAAMc,MAOJ,GAAGb,KAAK,IAAI;EACZ,MAAMwB,YAAY,GAAIC,CAAD,IAAY;IAC/BzB,KAAK,CAAC0B,gBAAN,CAAuBD,CAAC,CAACE,MAAF,CAASC,KAAhC;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAG7B,KAAK,CAAC8B,QAAN,IAAkB9B,KAAK,CAAC+B,QAAxB,GAAmC,CAAnC,GAAuCC,IAAI,CAACC,KAAL,CAAYjC,KAAK,CAAC8B,QAAN,GAAiB9B,KAAK,CAAC+B,QAAxB,GAAoC,CAA/C,CAAzD;EAEA,OAAO,cAAC,UAAD;IACL,OAAO,EAAE/B,KAAK,CAACkC,IADV;IAEL,SAAS,EAAEL,SAFN;IAGL,WAAW,EAAE7B,KAAK,CAAC+B,QAHd;IAIL,gBAAgB,EAAE,CAACb,KAAD,EAAiBiB,OAAjB,KAAqC;MACrDnC,KAAK,CAACoC,YAAN,CAAmBD,OAAO,GAAG,CAA7B;IACD,CANI;IAOL,uBAAuB,EAAEX,YAPpB;IAQL,KAAK,EAAE;MAACa,OAAO,EAAE;IAAV,CARF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AAUD,CAxBD;;MAAMxB,M;AA0BN,eAAed,SAAf"},"metadata":{},"sourceType":"module"}