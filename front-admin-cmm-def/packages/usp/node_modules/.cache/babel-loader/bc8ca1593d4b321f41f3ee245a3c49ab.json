{"ast":null,"code":"var _jsxFileName = \"/Users/choi/react-workspace/front-admin-cmm-def/packages/usp/src/pages/SignIn/FactorReset/FactorReset.tsx\",\n    _s = $RefreshSig$();\n\nimport { fetchFactor } from '~/fetches';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as styles from './styles';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { NavLink } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nfunction Factor() {\n  _s();\n\n  const [form, setForm] = useState({\n    password: '1234'\n  });\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.currentTarget;\n    setForm(state => ({ ...state,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // TODO: 비밀번호 확인\n\n    if (form.password) {\n      fetchFactor(form.password).then(res => {\n        const {\n          passwdCheckKey: key\n        } = res; //* response 로 받은 키를 저장해 둔다.\n\n        sessionStorage.setItem('__FACTOR_KEY__', key); //* 회원 정보 조회\n        // me(key);\n\n        navigate('/mypage');\n      }).catch(e => {\n        if (e.response) {\n          //* 비밀 번호가 맞지 않을 때.\n          alert(e.response.data.message);\n        } else {\n          //* 오류\n          alert('서비스를 이용 할 수 없습니다.');\n        }\n      });\n    }\n  };\n\n  return ___EmotionJSX(\"section\", {\n    css: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(\"div\", {\n    css: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"tit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"), ___EmotionJSX(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"\\uC0C8\\uB85C\\uC6B4 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694. \")), ___EmotionJSX(Box, {\n    component: \"form\",\n    noValidate: true,\n    autoComplete: \"off\",\n    css: styles.singTextbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TextField, {\n    required: true,\n    id: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), ___EmotionJSX(Box, {\n    component: \"form\",\n    noValidate: true,\n    autoComplete: \"off\",\n    css: styles.singTextbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TextField, {\n    required: true,\n    id: \"passwordreset\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    variant: \"outlined\",\n    fullWidth: true,\n    placeholder: \"8~16\\uC790 \\uC601\\uBB38 \\uB300\\uC18C\\uBB38\\uC790,\\uC22B\\uC790,\\uD2B9\\uC218\\uBB38\\uC790\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), ___EmotionJSX(Stack, {\n    spacing: 2,\n    direction: \"row\",\n    css: styles.signbtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(NavLink, {\n    to: '/factorfind',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, '다음')))));\n}\n\n_s(Factor, \"SjcLgBNTEpp8xIa5z+tiaSo8uls=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Factor;\nexport default Factor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Factor\");","map":{"version":3,"names":["fetchFactor","useState","useNavigate","styles","Button","Stack","NavLink","Box","TextField","Factor","form","setForm","password","navigate","handleChange","e","name","value","currentTarget","state","handleSubmit","preventDefault","then","res","passwdCheckKey","key","sessionStorage","setItem","catch","response","alert","data","message","container","content","singTextbox","signbtn"],"sources":["/Users/choi/react-workspace/front-admin-cmm-def/packages/usp/src/pages/SignIn/FactorReset/FactorReset.tsx"],"sourcesContent":["import { fetchFactor} from '~/fetches';\nimport { FormEvent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as styles from './styles';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { NavLink } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\ntype FormType = {\n  password?: string;\n};\n\nfunction Factor() {\n  const [form, setForm] = useState<FormType>({ password: '1234' });\n\n  const navigate = useNavigate();\n  const handleChange = (e: FormEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n    setForm((state) => ({ ...state, [name]: value }));\n  };\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    // TODO: 비밀번호 확인\n    if (form.password) {\n      fetchFactor(form.password)\n        .then((res) => {\n          const { passwdCheckKey: key } = res;\n          //* response 로 받은 키를 저장해 둔다.\n          sessionStorage.setItem('__FACTOR_KEY__', key);\n\n          //* 회원 정보 조회\n          // me(key);\n\n          navigate('/mypage');\n        })\n        .catch((e) => {\n          if (e.response) {\n            //* 비밀 번호가 맞지 않을 때.\n            alert(e.response.data.message);\n          } else {\n            //* 오류\n            alert('서비스를 이용 할 수 없습니다.');\n          }\n        });\n    }\n  };\n  return (\n    <section css={styles.container}>\n      <div css={styles.content}>\n        <div className=\"tit\">\n          <h1>비밀번호 재설정</h1>\n          <p>새로운 비밀번호를 입력해주세요. </p>\n        </div>\n        <Box component=\"form\"\n          noValidate\n          autoComplete=\"off\"\n          css={styles.singTextbox}>\n          <TextField\n            required\n            id=\"password\" \n            label=\"비밀번호\" \n            variant=\"outlined\"\n            fullWidth\n          />\n        </Box>\n        <Box component=\"form\"\n          noValidate\n          autoComplete=\"off\"\n          css={styles.singTextbox}>\n          <TextField\n            required\n            id=\"passwordreset\" \n            label=\"비밀번호 확인\" \n            variant=\"outlined\"\n            fullWidth\n            placeholder=\"8~16자 영문 대소문자,숫자,특수문자\"\n\n          />\n        </Box>\n        <Stack spacing={2} direction=\"row\" css={styles.signbtn}>\n          <Button fullWidth variant=\"contained\" type=\"button\">\n            <NavLink to={'/factorfind'}>\n              {'다음'}\n            </NavLink>\n          </Button>\n        </Stack>\n      </div>\n    </section>\n  );\n}\n\nexport default Factor;\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA2B,WAA3B;AACA,SAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAMA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAW;IAAEW,QAAQ,EAAE;EAAZ,CAAX,CAAhC;EAEA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;EACA,MAAMY,YAAY,GAAIC,CAAD,IAAoC;IACvD,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,CAAC,CAACG,aAA1B;IACAP,OAAO,CAAEQ,KAAD,KAAY,EAAE,GAAGA,KAAL;MAAY,CAACH,IAAD,GAAQC;IAApB,CAAZ,CAAD,CAAP;EACD,CAHD;;EAIA,MAAMG,YAAY,GAAIL,CAAD,IAAY;IAC/BA,CAAC,CAACM,cAAF,GAD+B,CAG/B;;IACA,IAAIX,IAAI,CAACE,QAAT,EAAmB;MACjBZ,WAAW,CAACU,IAAI,CAACE,QAAN,CAAX,CACGU,IADH,CACSC,GAAD,IAAS;QACb,MAAM;UAAEC,cAAc,EAAEC;QAAlB,IAA0BF,GAAhC,CADa,CAEb;;QACAG,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyCF,GAAzC,EAHa,CAKb;QACA;;QAEAZ,QAAQ,CAAC,SAAD,CAAR;MACD,CAVH,EAWGe,KAXH,CAWUb,CAAD,IAAO;QACZ,IAAIA,CAAC,CAACc,QAAN,EAAgB;UACd;UACAC,KAAK,CAACf,CAAC,CAACc,QAAF,CAAWE,IAAX,CAAgBC,OAAjB,CAAL;QACD,CAHD,MAGO;UACL;UACAF,KAAK,CAAC,mBAAD,CAAL;QACD;MACF,CAnBH;IAoBD;EACF,CA1BD;;EA2BA,OACE;IAAS,GAAG,EAAE3B,MAAM,CAAC8B,SAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAK,GAAG,EAAE9B,MAAM,CAAC+B,OAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iDADF,EAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8FAFF,CADF,EAKE,cAAC,GAAD;IAAK,SAAS,EAAC,MAAf;IACE,UAAU,MADZ;IAEE,YAAY,EAAC,KAFf;IAGE,GAAG,EAAE/B,MAAM,CAACgC,WAHd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAIE,cAAC,SAAD;IACE,QAAQ,MADV;IAEE,EAAE,EAAC,UAFL;IAGE,KAAK,EAAC,0BAHR;IAIE,OAAO,EAAC,UAJV;IAKE,SAAS,MALX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJF,CALF,EAiBE,cAAC,GAAD;IAAK,SAAS,EAAC,MAAf;IACE,UAAU,MADZ;IAEE,YAAY,EAAC,KAFf;IAGE,GAAG,EAAEhC,MAAM,CAACgC,WAHd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAIE,cAAC,SAAD;IACE,QAAQ,MADV;IAEE,EAAE,EAAC,eAFL;IAGE,KAAK,EAAC,uCAHR;IAIE,OAAO,EAAC,UAJV;IAKE,SAAS,MALX;IAME,WAAW,EAAC,wFANd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJF,CAjBF,EA+BE,cAAC,KAAD;IAAO,OAAO,EAAE,CAAhB;IAAmB,SAAS,EAAC,KAA7B;IAAmC,GAAG,EAAEhC,MAAM,CAACiC,OAA/C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,MAAD;IAAQ,SAAS,MAAjB;IAAkB,OAAO,EAAC,WAA1B;IAAsC,IAAI,EAAC,QAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,OAAD;IAAS,EAAE,EAAE,aAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,IADH,CADF,CADF,CA/BF,CADF,CADF;AA2CD;;GA9EQ3B,M;UAGUP,W;;;KAHVO,M;AAgFT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}