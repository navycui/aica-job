<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aicluster.pms.common.dao.UsptExpertDao">

	<select id="selectList" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.selectList */
		select a.expert_id
			 , a.expert_nm
			 , a.sexdstn_code as gender_cd
			 , fn_cmm_get_code_nm('GENDER', a.sexdstn_code) as gender_nm
			 , a.native_at 			as native_yn
			 , case when coalesce(a.native_at, true) = true then '내국인' else '외국인' end as native_nm
			 , a.encpt_brthdy as enc_brthdy
			 , a.encpt_mbtlnum as enc_mbtlnum
			 , a.encpt_email as enc_email
			 , a.wrc_nm
			 , a.dept_nm
			 , a.ofcps_nm
			 , a.job_nm  as dty_nm
			 , a.wrc_adres
			 , a.wrc_adres_detail
			 , a.wrc_adres_zip
			 , a.wrc_telno
			 , a.last_univ_nm
			 , a.univ_fcty_nm  as univ_dept_nm
			 , a.act_realm_code  as act_realm_cd
			 , a.atchmnfl_group_id  as attachment_group_id
			 , a.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
			 , a.creatr_id 	as creator_id
			 , a.creat_dt 	as created_dt
			 , a.updusr_id  as updater_id
			 , a.updt_dt  	as updated_dt
			 , a.mber_id 	 as member_id
			 , fn_cmm_get_code_nm('EXPERT_REQST_PROCESS_STTUS', a.expert_reqst_process_sttus_code) as expert_reqst_process_sttus_nm  /**  전문가신청처리상태명**/
			 , row_number() over (order by a.creat_dt desc) as rn
		  from usp_api.uspt_expert a
		  	   left outer join usp_api.uspt_expert_cl_mapng b
		 		            on a.expert_id = b.expert_id
		 where 1 = 1
		   <if test='expertId != null and expertId != ""'>
		   	and expert_id = #{expertId}
	   	   </if>
	   	   <if test='expertNm != null and expertNm != ""'>
		   	and expert_nm like '%' || #{expertNm} || '%'
	   	   </if>
	   	   <if test='wrcNm != null and wrcNm != ""'>
		   	and wrc_nm like '%' || #{wrcNm} || '%'
	   	   </if>

	   	   <if test='encBrthdy != null and encBrthdy != ""'>
		   	and encpt_brthdy like = #{encBrthdy}
	   	   </if>
	   	   <if test='encMbtlnum != null and encMbtlnum != ""'>
		   	and encpt_mbtlnum = #{encMbtlnum}
	   	   </if>
	   	   <if test='encEmail != null and encEmail != ""'>
		   	and encpt_email  = #{encEmail}
	   	   </if>
	   	   <if test='expertReqstProcessSttusCd != null and expertReqstProcessSttusCd != ""'>
		   	and expert_reqst_process_sttus_code = #{expertReqstProcessSttusCd}
	   	   </if>
	   	   <if test='reqstDayStart != null and reqstDayStart != "" and reqstDayEnd != null and reqstDayEnd != ""'>
					and to_char(created_dt,'YYYYMMDD') between #{reqstDayStart} and #{reqstDayEnd}
		  </if>
  			<if test="!isExcel">
				offset #{beginRowNum} -1
				limit #{itemsPerPage}
			</if>
	</select>

	<select id="selectExpertTargetList" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.selectExpertTargetList */
		select distinct a.expert_id
		  from usp_api.uspt_expert a
		  	   inner join usp_api.uspt_expert_cl_mapng b
		 		            on a.expert_id = b.expert_id
		 where 1 = 1
		   /*기존 등록 위원 제외- 기본 제외 처리*/
		   and a.expert_id not in (
		         				   select b.expert_id
		     						 from usp_api.uspt_evl_mfcmm_extrc a
										  inner join usp_api.uspt_extrc_mfcmm b
												  on a.mfcmm_extrc_id = b.mfcmm_extrc_id
									where a.evl_cmit_id = #{evlCmitId}
										)

			/*전문가 분류 체크*/
	   	   <if test='expertClId != null'>
		   		and b.expert_cl_id in
				<foreach collection="expertClId" item="item"  open="(" close=")" separator=",">
					#{item}
				</foreach>
	   	   </if>

	   	   /*이해관계자 제외 처리*/
	   	   <if test='intprtsExpertId != null'>
		   		and a.expert_id not in
				<foreach collection="intprtsExpertId" item="item"  open="(" close=")" separator=",">
					#{item}
				</foreach>
	   	   </if>

	   	   /*주관기관 참여기관 관련 전문가 제외 처리*/
	   	   <if test='insttExpertId != null'>
		   		and a.expert_id not in
				<foreach collection="insttExpertId" item="item"  open="(" close=")" separator=",">
					#{item}
				</foreach>
	   	   </if>

	   	   /*동일 평가단계의 다른 분과에 소속된 참여 제외 - 기본 제외처리*/
	   	   and a.expert_id not in (
							   	   select distinct expert_id from usp_api.uspt_evl_mfcmm_extrc s1
										  inner join usp_api.uspt_extrc_mfcmm s2 on s2.mfcmm_extrc_id = s1.mfcmm_extrc_id
									where evl_cmit_id in (
													      select a1.evl_cmit_id /*다른분과 같은 단계의 위원회ID 추출*/
													        from usp_api.uspt_evl_cmit a1
																 inner join (
																 			 select brnh_id, evl_step_id
																 			   from usp_api.uspt_evl_cmit
																 			  where evl_cmit_id = #{evlCmitId}
																 			 ) a2
																		 on a2.brnh_id != a1.brnh_id and a1.evl_step_id = a2.evl_step_id
														)
								)

	   	   /*참여제한 1번조건 이전 평가단계의 섭외인원*/
	   	   <if test='exclCnd1 =="Y"' >
	   	       and a.expert_id not in (
	   	       						   select s2.expert_id
	   	       						     from usp_api.USPT_EVL_MFCMM_EXTRC s1
											  inner join usp_api.USPT_EXTRC_MFCMM s2
											 		  on s1.MFCMM_EXTRC_ID = s2.MFCMM_EXTRC_ID
									    where s1.evl_cmit_id in (
																 select evl_cmit_id from usp_api.uspt_evl_cmit main1
																  where brnh_id || evl_step_id  in (
																                                    select b.brnh_id || c.evl_step_id
																                                      from usp_api.uspt_evl_plan a
																										   inner join usp_api.uspt_brnh b on a.evl_plan_id = b.evl_plan_id
																										   inner join usp_api.uspt_evl_step c on a.evl_plan_id = c.evl_plan_id
																										   inner join (
																													   select a.brnh_id, b.sort_ordr from usp_api.uspt_evl_cmit a
																														      inner join usp_api.uspt_evl_step b
																														  			  on a.evl_step_id = b.evl_step_id
																													    where a.evl_cmit_id = #{evlCmitId}
																								  				       ) d
																											        on b.brnh_id = d.brnh_id
																												 <![CDATA[
																											  		and c.sort_ordr < d.sort_ordr
																											  	 ]]>
															  									)
							   	       						  )
	   	       						  )
	   	   </if>

	   	   /*참여제한 2번조건 이전평가단계의 참여인원*/
	   	   <if test='exclCnd2 =="Y"' >
	   	   		and a.expert_id not in (
	   	       						   select s2.expert_id
	   	       						     from usp_api.USPT_EVL_MFCMM_EXTRC s1
											  inner join usp_api.USPT_EXTRC_MFCMM s2
											 		  on s1.MFCMM_EXTRC_ID = s2.MFCMM_EXTRC_ID
											  inner join usp_api.USPT_EVL_MFCMM s3 /*평가위원*/
													  on s2.extrc_mfcmm_id = s3.extrc_mfcmm_id
									    where s1.evl_cmit_id in (
																 select evl_cmit_id from usp_api.uspt_evl_cmit main1
																  where brnh_id || evl_step_id  in (
																                                    select b.brnh_id || c.evl_step_id
																                                      from usp_api.uspt_evl_plan a
																										   inner join usp_api.uspt_brnh b on a.evl_plan_id = b.evl_plan_id
																										   inner join usp_api.uspt_evl_step c on a.evl_plan_id = c.evl_plan_id
																										   inner join (
																													   select a.brnh_id, b.sort_ordr from usp_api.uspt_evl_cmit a
																														      inner join usp_api.uspt_evl_step b
																														  			  on a.evl_step_id = b.evl_step_id
																													    where a.evl_cmit_id = #{evlCmitId}
																								  				       ) d
																											        on b.brnh_id = d.brnh_id
																												 <![CDATA[
																											  		and c.sort_ordr < d.sort_ordr
																											  	 ]]>
															  									)
							   	       						  )
							   	       	  and s2.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'
	   	       						  )
	   	   </if>

	   	   /*참여제한 3번조건 동일 사업 3회 이상 참여인원*/
	   	   <if test='exclCnd3=="Y"' >
	   	      and a.expert_id not in (
	   	      						  select main.expert_id from (select a7.expert_id,count(*) /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
	   	      						    from usp_api.uspt_bsns_pblanc a1
											 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
											 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
											 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
											 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
											 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
											 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
									   where bsns_code = (
														 select s5.bsns_code /*위원회 ID -> 분과, 평가단계 -> 평가계획ID -> 공고ID -> 사업코드 추출*/
														   from usp_api.uspt_evl_cmit s1
																inner join usp_api.uspt_brnh s2 on s2.brnh_id = s1.brnh_id
																inner join usp_api.uspt_evl_step s3 on s3.evl_step_id  = s1.evl_step_id
																inner join usp_api.uspt_evl_plan s4 on s4.evl_plan_id = s3.evl_plan_id
																inner join usp_api.uspt_bsns_pblanc s5 on s5.pblanc_id = s4.pblanc_id
																where s1.evl_cmit_id  = #{evlCmitId}
														  )
										and a7.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'
							  		  group by a7.expert_id
									 having count(*) > 2 ) main
	   	      )

   	       </if>

	   	   /*참여제한 4번조건 동일 사업 참여인원*/
	   	   <if test='exclCnd4 =="Y"' >
	   	      and a.expert_id not in (
	   	      						  select distinct a7.expert_id /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
	   	      						    from usp_api.uspt_bsns_pblanc a1
											 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
											 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
											 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
											 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
											 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
											 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
									   where bsns_code = (
														 select s5.bsns_code /*위원회 ID -> 분과, 평가단계 -> 평가계획ID -> 공고ID -> 사업코드 추출*/
														   from usp_api.uspt_evl_cmit s1
																inner join usp_api.uspt_brnh s2 on s2.brnh_id = s1.brnh_id
																inner join usp_api.uspt_evl_step s3 on s3.evl_step_id  = s1.evl_step_id
																inner join usp_api.uspt_evl_plan s4 on s4.evl_plan_id = s3.evl_plan_id
																inner join usp_api.uspt_bsns_pblanc s5 on s5.pblanc_id = s4.pblanc_id
																where s1.evl_cmit_id  = #{evlCmitId}
														  )
										and a7.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'

	   	      )
	   	   </if>

	   	   /*추가배제옵션 1번조건 주관기관 및 참여기관 소속인원*/
	   	   <if test='lmttCndCd1 =="Y"' >

	   	   </if>

	   	   /*추가배제옵션 2번조건 3년 내 지원사업 선정평가 5회 이상 섭외인원*/
	   	   <if test='lmttCndCd2 =="Y"' >
			and a.expert_id not in (
             					     select main.expert_id from (select a7.expert_id,count(*) /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
	   	      						    from usp_api.uspt_bsns_pblanc a1
											 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
											 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
											 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
											 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
											 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
											 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
											 inner join usp_api.uspt_evl_mfcmm a8 on a8.extrc_mfcmm_id = a7.extrc_mfcmm_id /*평가위원*/
									   where bsns_code in (/*지원사업*/
									     				   select a2.bsns_code from usp_api.USPT_STDR_BSNS a1
																  inner join usp_api.USPT_BSNS a2 on a2.stdr_bsns_code = a1.stdr_bsns_code
														    where a1.bsns_ty_code = '${@aicluster.pms.common.util.Code@BSNS_TYPE_APPLY}'
														   )
										and a2.evl_ty_code ='${@aicluster.pms.common.util.Code@EVL_TYPE_01_CODE}'
										and a6.creat_dt >= now() +'-3 years'
							  		  group by a7.expert_id
									 having count(*) > 4 ) main
             						)
	   	   </if>

	   	   /*추가배제옵션 3번조건 3년 내 지원사업 선정평가 5회 이상 참여인원*/
	   	   <if test='lmttCndCd3 =="Y"' >
             and a.expert_id not in (
             					     select main.expert_id from (select a7.expert_id,count(*) /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
	   	      						    from usp_api.uspt_bsns_pblanc a1
											 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
											 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
											 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
											 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
											 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
											 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
									   where bsns_code in (/*지원사업*/
									     				   select a2.bsns_code from usp_api.USPT_STDR_BSNS a1
																  inner join usp_api.USPT_BSNS a2 on a2.stdr_bsns_code = a1.stdr_bsns_code
														    where a1.bsns_ty_code = '${@aicluster.pms.common.util.Code@BSNS_TYPE_APPLY}'
														   )
										and a2.evl_ty_code ='${@aicluster.pms.common.util.Code@EVL_TYPE_01_CODE}'
										and a7.creat_dt >= now() +'-3 years'
										and a7.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'
							  		  group by a7.expert_id
									 having count(*) > 4 ) main
             						)
	   	   </if>


	   	   /* 추출배수 설정*/
	   	   limit #{extrcMultiple} * (select mfcmm_co from usp_api.uspt_evl_cmit where evl_cmit_id = #{evlCmitId})

	</select>

	<select id="selectEvlPlanIdByCmitId" resultType="String">
		select max(s4.evl_plan_id) as evl_plan_id
		  from usp_api.uspt_evl_cmit s1
			   inner join usp_api.uspt_brnh s2 on s2.brnh_id = s1.brnh_id
			   inner join usp_api.uspt_evl_step s3 on s3.evl_step_id  = s1.evl_step_id
			   inner join usp_api.uspt_evl_plan s4 on s4.evl_plan_id = s3.evl_plan_id
		 where s1.evl_cmit_id  = #{evlCmitId}
	</select>


	<select id="selectExpertTargetLmttList" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.selectExpertTargetLmttList */
		select main1.expert_id, max(main2.excl_resn_cn) excl_resn_cn
		  from (
				select distinct a.expert_id
				  from usp_api.uspt_expert a
				  	   inner join usp_api.uspt_expert_cl_mapng b
				 		            on a.expert_id = b.expert_id
				 where 1 = 1
			   	   <if test='expertClId != null'>
				   		and b.expert_cl_id in
						<foreach collection="expertClId" item="item"  open="(" close=")" separator=",">
							#{item}
						</foreach>
			   	   </if>
			   	) main1
			 	inner join (
	   	   					select distinct expert_id, '동일 평가단계의 다른 분과 소속 위원' as excl_resn_cn
							  from usp_api.uspt_evl_mfcmm_extrc s1
								   inner join usp_api.uspt_extrc_mfcmm s2 on s2.mfcmm_extrc_id = s1.mfcmm_extrc_id
						   	 where evl_cmit_id in (
											       select a1.evl_cmit_id /*다른분과 같은 단계의 위원회ID 추출*/
											         from usp_api.uspt_evl_cmit a1
														  inner join (
														 			  select brnh_id, evl_step_id
														 			    from usp_api.uspt_evl_cmit
														 			   where evl_cmit_id = #{evlCmitId}
														 			  ) a2
																   on a2.brnh_id != a1.brnh_id and a1.evl_step_id = a2.evl_step_id
												  )

							<if test='intprtsExpertId != null'>
						    union all
						    select expert_id, '이해관계자' as excl_resn_cn
						      from usp_api.uspt_expert
						     where expert_id in
								<foreach collection="intprtsExpertId" item="item"  open="(" close=")" separator=",">
									#{item}
								</foreach>
					   	   	</if>

					   	   	/*주관기관 참여기관 관련 전문가 제외 처리*/
					   	   	<if test='insttExpertId != null'>
					   	   	union all
						   	select expert_id, '주관/참여기관 관련자' as excl_resn_cn
						      from usp_api.uspt_expert
						      where expert_id in
								<foreach collection="insttExpertId" item="item"  open="(" close=")" separator=",">
									#{item}
								</foreach>
					   	   	</if>

						    <if test='exclCnd1 =="Y"' >
						    union all /*참여제한 1번조건 이전 평가단계의 섭외인원*/
						    select s2.expert_id, '이전 평가단계의 섭외인원' as excl_resn_cn
						      from usp_api.USPT_EVL_MFCMM_EXTRC s1
								   inner join usp_api.USPT_EXTRC_MFCMM s2
								 		   on s1.MFCMM_EXTRC_ID = s2.MFCMM_EXTRC_ID
						     where s1.evl_cmit_id in (
													  select evl_cmit_id from usp_api.uspt_evl_cmit main1
													   where brnh_id || evl_step_id  in (
													                                     select b.brnh_id || c.evl_step_id
													                                       from usp_api.uspt_evl_plan a
																							    inner join usp_api.uspt_brnh b on a.evl_plan_id = b.evl_plan_id
																							    inner join usp_api.uspt_evl_step c on a.evl_plan_id = c.evl_plan_id
																							    inner join (
																										    select a.brnh_id, b.sort_ordr from usp_api.uspt_evl_cmit a
																											       inner join usp_api.uspt_evl_step b
																											  			   on a.evl_step_id = b.evl_step_id
																										     where a.evl_cmit_id = #{evlCmitId}
																					  				        ) d
																								         on b.brnh_id = d.brnh_id
																									 <![CDATA[
																								  		and c.sort_ordr < d.sort_ordr
																								  	 ]]>
												  									)
				   	       						  )
	   	   					</if>

	   	   					<if test='exclCnd2 =="Y"' >
	   	   					union all
							select s2.expert_id, '이전 평가단계의 참여인원' as excl_resn_cn
	   	       						     from usp_api.USPT_EVL_MFCMM_EXTRC s1
											  inner join usp_api.USPT_EXTRC_MFCMM s2
											 		  on s1.MFCMM_EXTRC_ID = s2.MFCMM_EXTRC_ID
											  inner join usp_api.USPT_EVL_MFCMM s3 /*평가위원*/
													  on s2.extrc_mfcmm_id = s3.extrc_mfcmm_id
									    where s1.evl_cmit_id in (
																 select evl_cmit_id from usp_api.uspt_evl_cmit main1
																  where brnh_id || evl_step_id  in (
																                                    select b.brnh_id || c.evl_step_id
																                                      from usp_api.uspt_evl_plan a
																										   inner join usp_api.uspt_brnh b on a.evl_plan_id = b.evl_plan_id
																										   inner join usp_api.uspt_evl_step c on a.evl_plan_id = c.evl_plan_id
																										   inner join (
																													   select a.brnh_id, b.sort_ordr from usp_api.uspt_evl_cmit a
																														      inner join usp_api.uspt_evl_step b
																														  			  on a.evl_step_id = b.evl_step_id
																													    where a.evl_cmit_id = #{evlCmitId}
																								  				       ) d
																											        on b.brnh_id = d.brnh_id
																												 <![CDATA[
																											  		and c.sort_ordr < d.sort_ordr
																											  	 ]]>
															  									)
							   	       						  )
							   	       	  and s2.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'
	   	   					</if>

					   	   	<if test='exclCnd3 == "Y"' >
					   	    union all /*참여제한 3번조건 동일 사업 3회 이상 참여인원*/
					   	    select s2.expert_id, '동일 사업 3회 이상 참여인원' as excl_resn_cn
					   	      from (select a7.expert_id,count(*) /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
					   	      						    from usp_api.uspt_bsns_pblanc a1
															 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
															 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
															 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
															 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
															 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
															 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
													   where bsns_code = (
																		 select s5.bsns_code /*위원회 ID -> 분과, 평가단계 -> 평가계획ID -> 공고ID -> 사업코드 추출*/
																		   from usp_api.uspt_evl_cmit s1
																				inner join usp_api.uspt_brnh s2 on s2.brnh_id = s1.brnh_id
																				inner join usp_api.uspt_evl_step s3 on s3.evl_step_id  = s1.evl_step_id
																				inner join usp_api.uspt_evl_plan s4 on s4.evl_plan_id = s3.evl_plan_id
																				inner join usp_api.uspt_bsns_pblanc s5 on s5.pblanc_id = s4.pblanc_id
																				where s1.evl_cmit_id  = #{evlCmitId}
																		  )
														and a7.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'
											  		  group by a7.expert_id
													 having count(*) > 2 ) s2

					   	     </if>

					   	   	<if test='exclCnd4 =="Y"' >
					   	      union all  /*참여제한 4번조건 동일 사업 참여인원*/
					   	      select s2.expert_id, '동일 사업 참여인원' as excl_resn_cn
  	      						from (select distinct a7.expert_id /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
	  	      						    from usp_api.uspt_bsns_pblanc a1
											 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
											 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
											 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
											 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
											 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
											 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
									   where bsns_code = (
														 select s5.bsns_code /*위원회 ID -> 분과, 평가단계 -> 평가계획ID -> 공고ID -> 사업코드 추출*/
														   from usp_api.uspt_evl_cmit s1
																inner join usp_api.uspt_brnh s2 on s2.brnh_id = s1.brnh_id
																inner join usp_api.uspt_evl_step s3 on s3.evl_step_id  = s1.evl_step_id
																inner join usp_api.uspt_evl_plan s4 on s4.evl_plan_id = s3.evl_plan_id
																inner join usp_api.uspt_bsns_pblanc s5 on s5.pblanc_id = s4.pblanc_id
																where s1.evl_cmit_id  = #{evlCmitId}
														  )
									  	 and a7.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'
					   	         	 ) s2
					   	   	</if>

					   	   	<if test='lmttCndCd2 =="Y"' >
					   	   	 union all  /*추가배제옵션 2번조건 */
					   	      select s2.expert_id, '3년 내 지원사업 선정평가 5회 이상 섭외인원' as excl_resn_cn
  	      						from (
             					      select main.expert_id from (select a7.expert_id,count(*) /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
	   	      						    from usp_api.uspt_bsns_pblanc a1
											 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
											 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
											 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
											 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
											 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
											 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
											 inner join usp_api.uspt_evl_mfcmm a8 on a8.extrc_mfcmm_id = a7.extrc_mfcmm_id /*평가위원*/
									   where bsns_code in (/*지원사업*/
									     				   select a2.bsns_code from usp_api.USPT_STDR_BSNS a1
																  inner join usp_api.USPT_BSNS a2 on a2.stdr_bsns_code = a1.stdr_bsns_code
														    where a1.bsns_ty_code = '${@aicluster.pms.common.util.Code@BSNS_TYPE_APPLY}'
														   )
										and a2.evl_ty_code ='${@aicluster.pms.common.util.Code@EVL_TYPE_01_CODE}'
										and a6.creat_dt >= now() +'-3 years'
							  		  group by a7.expert_id
									 having count(*) > 4 ) main
             						)  s2
					   	   </if>

					   	   /*추가배제옵션 3번조건 3년 내 지원사업 선정평가 5회 이상 참여인원*/
					   	   <if test='lmttCndCd3 =="Y"' >
				             union all  /*추가배제옵션 3번조건 */
					   	      select s2.expert_id, '3년 내 지원사업 선정평가 5회 이상 참여인원' as excl_resn_cn
					   	        from (
					   	              select main.expert_id from (select a7.expert_id,count(*) /*사업코드에 해당하는 공고ID -> 평가계획 -> 평가단계, 분과 -> 위원회ID -> 위원추출ID -> 추출위원(섭외결과 승낙 인 전문가ID)*/
   	      						        from usp_api.uspt_bsns_pblanc a1
										 	 inner join usp_api.uspt_evl_plan a2 on a2.pblanc_id = a1.pblanc_id
											 inner join usp_api.uspt_brnh a3 on a3.evl_plan_id = a2.evl_plan_id
											 inner join usp_api.uspt_evl_step a4 on a4.evl_plan_id  = a2.evl_plan_id
											 inner join usp_api.uspt_evl_cmit a5 on a5.brnh_id  = a3.brnh_id  and a5.evl_step_id = a4.evl_step_id
											 inner join usp_api.uspt_evl_mfcmm_extrc a6 on a6.evl_cmit_id = a5.evl_cmit_id
											 inner join usp_api.uspt_extrc_mfcmm a7 on a7.mfcmm_extrc_id = a6.mfcmm_extrc_id
									   where bsns_code in (/*지원사업*/
									     				   select a2.bsns_code from usp_api.USPT_STDR_BSNS a1
																  inner join usp_api.USPT_BSNS a2 on a2.stdr_bsns_code = a1.stdr_bsns_code
														    where a1.bsns_ty_code = '${@aicluster.pms.common.util.Code@BSNS_TYPE_APPLY}'
														   )
										and a2.evl_ty_code ='${@aicluster.pms.common.util.Code@EVL_TYPE_01_CODE}'
										and a7.creat_dt >= now() +'-3 years'
										and a7.lsn_result_code = '${@aicluster.pms.common.util.Code@LSN_RESULT_04_CODE}'
							  		  group by a7.expert_id
									 having count(*) > 4 ) main
             						) s2
					   	   </if>

			 				) main2
						on main1.expert_id = main2.expert_id
	       group by main1.expert_id
	</select>

	<select id="selectListCount" resultType="Long">
		/** UsptExpertDao.selectListCount */
		select count(expert_id) as cnt
		  from usp_api.uspt_expert
		 where 1 = 1
		   <if test='expertId != null and expertId != ""'>
		   	and expert_id = #{expertId}
	   	   </if>
	   	   <if test='expertNm != null and expertNm != ""'>
		   	and expert_nm like '%' || #{expertNm} || '%'
	   	   </if>
	   	   <if test='wrcNm != null and wrcNm != ""'>
		   	and wrc_nm like '%' || #{wrcNm} || '%'
	   	   </if>
	</select>


	<!-- 전문가 추출위원리스트 -->
	<select id="selectListByExtrc" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.selectListByExtrc */
		select c.expert_id
			 , c.expert_nm
			 , c.sexdstn_code as gender_cd
			 , c.native_at 			as native_yn
			 , c.encpt_brthdy  as enc_brthdy
			 , c.encpt_mbtlnum as enc_mbtlnum
			 , c.encpt_email as enc_email
			 , c.wrc_nm
			 , c.dept_nm
			 , c.ofcps_nm
			 , c.job_nm  as dty_nm
			 , c.wrc_adres
			 , c.wrc_adres_detail
			 , c.wrc_adres_zip
			 , c.wrc_telno
			 , c.last_univ_nm
			 , c.univ_fcty_nm  as univ_dept_nm
			 , c.act_realm_code  as act_realm_cd
			 , c.atchmnfl_group_id  as attachment_group_id
			 , c.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
			 , (
			 	select array_to_string(array_agg(trim(bb.expert_cl_nm)),' ,')
			  	  from usp_api.uspt_expert_cl_mapng aa
					   inner join usp_api.uspt_expert_cl bb
							   on aa.expert_cl_id = bb.expert_cl_id
				 where aa.expert_id = b.expert_id
				   and bb.expert_cl_id in (select unnest(expert_cl_id) from usp_api.uspt_evl_mfcmm_extrc cc where cc.mfcmm_extrc_id = a.mfcmm_extrc_id)
			    ) || ' > ' || coalesce(c.ofcps_nm,'직위정보없음') as expert_cl_nm /*전문가분야*/
			 , b.lsn_result_code as lsn_result_cd
			 , COALESCE(usp_api.fn_cmm_get_code_nm('LSN_RESULT', b.lsn_result_code),'대기중') as lsn_result_nm
			 , row_number() over (order by b.creat_dt desc) as rn
			 , a.ordr_no || '차 추출' as odr_nm
			 , b.extrc_mfcmm_id			/*추출위원id*/
		 from usp_api.uspt_evl_mfcmm_extrc a 											/*평가위원추출조건정보*/
			  inner join usp_api.uspt_extrc_mfcmm b										/*추출위원*/
					  on a.mfcmm_extrc_id = b.mfcmm_extrc_id
			  inner join usp_api.uspt_expert c											/*전문가정보*/
					  on b.expert_id = c.expert_id
		 where a.evl_cmit_id = #{evlCmitId}
		   and a.ordr_no = #{odrNo}

	   	<if test='lsnResultCd != null and lsnResultCd != ""'>
	   		and b.lsn_result_code = #{lsnResultCd}
	   	</if>

	</select>

	<select id="selectListByExtrcExcel" resultType="aicluster.pms.common.entity.UsptExpertExcel">
		/** UsptExpertDao.selectListByExtrcExcel */
		select c.expert_id
			 , c.expert_nm
			 , c.sexdstn_code as gender_cd
			 , c.native_at 			as native_yn
			 , c.encpt_brthdy as enc_brthdy
			 , c.encpt_mbtlnum as enc_mbtlnum
			 , c.encpt_email as enc_email
			 , c.wrc_nm
			 , c.dept_nm
			 , c.ofcps_nm
			 , c.job_nm  as dty_nm
			 , c.wrc_adres
			 , c.wrc_adres_detail
			 , c.wrc_adres_zip
			 , c.wrc_telno
			 , c.last_univ_nm
			 , c.univ_fcty_nm  as univ_dept_nm
			 , c.act_realm_code  as act_realm_cd
			 , c.atchmnfl_group_id  as attachment_group_id
			 , c.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
			 , (
			 	select array_to_string(array_agg(trim(bb.expert_cl_nm)),' ,')
			  	  from usp_api.uspt_expert_cl_mapng aa
					   inner join usp_api.uspt_expert_cl bb
							   on aa.expert_cl_id = bb.expert_cl_id
				 where aa.expert_id = b.expert_id
				   and bb.expert_cl_id in (select unnest(expert_cl_id) from usp_api.uspt_evl_mfcmm_extrc cc where cc.mfcmm_extrc_id = a.mfcmm_extrc_id)
			    ) || ' > ' || coalesce(c.ofcps_nm,'직위정보없음') as expert_cl_nm /*전문가분야*/
			 , b.lsn_result_code as lsn_result_cd
			 , COALESCE(usp_api.fn_cmm_get_code_nm('LSN_RESULT', b.lsn_result_code),'대기중') as lsn_result_nm
			 , row_number() over (order by b.creat_dt desc) as rn
			 , a.ordr_no || '차 추출' as odr_nm
			 , b.extrc_mfcmm_id			/*추출위원id*/
		 from usp_api.uspt_evl_mfcmm_extrc a 											/*평가위원추출조건정보*/
			  inner join usp_api.uspt_extrc_mfcmm b										/*추출위원*/
					  on a.mfcmm_extrc_id = b.mfcmm_extrc_id
			  inner join usp_api.uspt_expert c											/*전문가정보*/
					  on b.expert_id = c.expert_id
		 where a.evl_cmit_id = #{evlCmitId}
		   and a.ordr_no = #{odrNo}

	   	<if test='lsnResultCd != null and lsnResultCd != ""'>
	   		and b.lsn_result_code = #{lsnResultCd}
	   	</if>

	</select>

	<!-- 전문가 추출위원리스트 -->
	<select id="selectMfcmmDetail" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.selectMfcmmDetail */
		select b.expert_id
			 , b.expert_nm
			 , b.sexdstn_code as gender_cd
			 , b.native_at 			as native_yn
			 , b.encpt_brthdy as enc_brthdy
			 , b.encpt_mbtlnum as enc_mbtlnum
			 , b.encpt_email as enc_email
			 , b.wrc_nm
			 , b.dept_nm
			 , b.ofcps_nm
			 , b.job_nm  as dty_nm
			 , b.wrc_adres
			 , b.wrc_adres_detail
			 , b.wrc_adres_zip
			 , b.wrc_telno
			 , b.last_univ_nm
			 , b.univ_fcty_nm  as univ_dept_nm
			 , b.act_realm_code  as act_realm_cd
			 , b.atchmnfl_group_id  as attachment_group_id
			 , b.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
			 , a.extrc_mfcmm_id			/*추출위원id*/
		 from usp_api.uspt_extrc_mfcmm a										/*추출위원*/
			  inner join usp_api.uspt_expert b											/*전문가정보*/
					  on a.expert_id = b.expert_id
		 where a.extrc_mfcmm_id = #{extrcMfcmmId}
	</select>


	<select id="selectMfcmmDetailEnc" resultType="aicluster.pms.common.entity.UsptExpertResult">
		/** UsptExpertDao.selectMfcmmDetailEnc */
		select b.expert_id
			 , b.expert_nm
			 , b.sexdstn_code as gender_cd
			 , b.native_at 			as native_yn
			 , b.encpt_brthdy		as enc_brthdy
			 , b.encpt_mbtlnum 	as enc_mbtlnum
			 , b.encpt_email 		as enc_email
			 , b.wrc_nm
			 , b.dept_nm
			 , b.ofcps_nm
			 , b.job_nm  as dty_nm
			 , b.wrc_adres
			 , b.wrc_adres_detail
			 , b.wrc_adres_zip
			 , b.wrc_telno
			 , b.last_univ_nm
			 , b.univ_fcty_nm  as univ_dept_nm
			 , b.act_realm_code  as act_realm_cd
			 , b.atchmnfl_group_id  as attachment_group_id
			 , b.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
			 , a.extrc_mfcmm_id			/*추출위원id*/
		 from usp_api.uspt_extrc_mfcmm a										/*추출위원*/
			  inner join usp_api.uspt_expert b											/*전문가정보*/
					  on a.expert_id = b.expert_id
		 where a.extrc_mfcmm_id = #{extrcMfcmmId}
	</select>


	<!-- 추출 제외 위원 리스트 -->
	<select id="selectListByExcl" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.selectListByExcl */
		select c.expert_id
			 , c.expert_nm
			 , c.sexdstn_code as gender_cd
			 , c.native_at 			as native_yn
			 , c.encpt_brthdy as enc_brthdy
			 , c.encpt_mbtlnum as enc_mbtlnum
			 , c.encpt_email		as enc_email
			 , c.wrc_nm
			 , c.dept_nm
			 , c.ofcps_nm
			 , c.job_nm  as dty_nm
			 , c.wrc_adres
			 , c.wrc_adres_detail
			 , c.wrc_adres_zip
			 , c.wrc_telno
			 , c.last_univ_nm
			 , c.univ_fcty_nm  as univ_dept_nm
			 , c.act_realm_code  as act_realm_cd
			 , c.atchmnfl_group_id  as attachment_group_id
			 , c.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
			 , b.excl_resn_cn
			 , (
			 	select array_to_string(array_agg(trim(bb.expert_cl_nm)),' ,')
			  	  from usp_api.uspt_expert_cl_mapng aa
					   inner join usp_api.uspt_expert_cl bb
							   on aa.expert_cl_id = bb.expert_cl_id
				 where aa.expert_id = b.expert_id
				   and bb.expert_cl_id in (select unnest(expert_cl_id) from usp_api.uspt_evl_mfcmm_extrc cc where cc.mfcmm_extrc_id = a.mfcmm_extrc_id)
			    ) || ' > ' || coalesce(c.ofcps_nm,'직위정보없음') as expert_cl_nm /*전문가분야*/
			 , row_number() over (order by b.creat_dt desc) as rn
			 , a.ordr_no  || '차 추출' as odr_nm
		 from usp_api.uspt_evl_mfcmm_extrc a 											/*평가위원추출조건정보*/
			  inner join usp_api.uspt_excl_mfcmm b										/*제외위원*/
					  on a.mfcmm_extrc_id = b.mfcmm_extrc_id
			  inner join usp_api.uspt_expert c											/*전문가정보*/
			  		  on b.expert_id = c.expert_id
		 where a.evl_cmit_id = #{evlCmitId}
		   and a.ordr_no = #{odrNo}
	</select>

	<select id="selectListByExclExcel" resultType="aicluster.pms.common.entity.UsptExpertExcel">
		/** UsptExpertDao.selectListByExclExcel */
		select c.expert_id
			 , c.expert_nm
			 , c.sexdstn_code as gender_cd
			 , c.native_at 			as native_yn
			 , c.encpt_brthdy as enc_brthdy
			 , c.encpt_mbtlnum as enc_mbtlnum
			 , c.encpt_email as enc_email
			 , c.wrc_nm
			 , c.dept_nm
			 , c.ofcps_nm
			 , c.job_nm  as dty_nm
			 , c.wrc_adres
			 , c.wrc_adres_detail
			 , c.wrc_adres_zip
			 , c.wrc_telno
			 , c.last_univ_nm
			 , c.univ_fcty_nm  as univ_dept_nm
			 , c.act_realm_code  as act_realm_cd
			 , c.atchmnfl_group_id  as attachment_group_id
			 , c.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
			 , b.excl_resn_cn
			 , (
			 	select array_to_string(array_agg(trim(bb.expert_cl_nm)),' ,')
			  	  from usp_api.uspt_expert_cl_mapng aa
					   inner join usp_api.uspt_expert_cl bb
							   on aa.expert_cl_id = bb.expert_cl_id
				 where aa.expert_id = b.expert_id
				   and bb.expert_cl_id in (select unnest(expert_cl_id) from usp_api.uspt_evl_mfcmm_extrc cc where cc.mfcmm_extrc_id = a.mfcmm_extrc_id)
			    ) || ' > ' || coalesce(c.ofcps_nm,'직위정보없음') as expert_cl_nm /*전문가분야*/
			 , row_number() over (order by b.creat_dt desc) as rn
			 , a.ordr_no || '차 추출' as odr_nm
		 from usp_api.uspt_evl_mfcmm_extrc a 											/*평가위원추출조건정보*/
			  inner join usp_api.uspt_excl_mfcmm b										/*제외위원*/
					  on a.mfcmm_extrc_id = b.mfcmm_extrc_id
			  inner join usp_api.uspt_expert c											/*전문가정보*/
			  		  on b.expert_id = c.expert_id
		 where a.evl_cmit_id = #{evlCmitId}
		   and a.ordr_no = #{odrNo}
	</select>

	<insert id="insertList">
		insert into usp_api.uspt_expert (
			   expert_id
			 , expert_nm
			 , sexdstn_code
			 , native_at
			 , encpt_brthdy
			 , encpt_mbtlnum
			 , encpt_email
			 , wrc_nm
			 , dept_nm
			 , ofcps_nm
			 , job_nm
			 , wrc_adres
			 , wrc_adres_detail
			 , wrc_adres_zip
			 , wrc_telno
			 , last_univ_nm
			 , univ_fcty_nm
			 , act_realm_code
			 , atchmnfl_group_id
			 , expert_reqst_process_sttus_code
			 , creatr_id
			 , creat_dt
			 , updusr_id
			 , updt_dt
		) values
		<foreach item="item" index="index" collection="list" separator=",">
				(
				   #{item.expertId}
				 , #{item.expertNm}
				 , #{item.genderCd}
				 , #{item.nativeYn}
				 , #{item.encBrthdy}
				 , #{item.encMbtlnum}
				 , #{item.encEmail}
				 , #{item.wrcNm}
				 , #{item.deptNm}
				 , #{item.ofcpsNm}
				 , #{item.dtyNm}
				 , #{item.wrcAdres}
				 , #{item.wrcAdresDetail}
				 , #{item.wrcAdresZip}
				 , #{item.wrcTelno}
				 , #{item.lastUnivNm}
				 , #{item.univDeptNm}
				 , #{item.actRealmCd}
				 , #{item.attachmentGroupId}
				 , #{item.expertReqstProcessSttusCd}
				 , #{item.creatorId}
				 , #{item.createdDt}
				 , #{item.updaterId}
				 , #{item.updatedDt}
				)
		</foreach>
	</insert>

<!-- ********************************************************전문가 신청 front ***********************************************************-->
	<insert id="insert">
		insert into usp_api.uspt_expert (
			   expert_id
			 , expert_nm
			 , sexdstn_code
			 , native_at
			 , encpt_brthdy
			 , encpt_mbtlnum
			 , encpt_email
			 , wrc_nm
			 , dept_nm
			 , ofcps_nm
			 , job_nm
			 , wrc_adres
			 , wrc_adres_detail
			 , wrc_adres_zip
			 , wrc_telno
			 , last_univ_nm
			 , univ_fcty_nm
			 , act_realm_code
			 , atchmnfl_group_id
			 , expert_reqst_process_sttus_code
			 , mber_id
			 , creatr_id
			, creat_dt
			, updusr_id
			, updt_dt
		) values
				(
				   #{expertId}
				 , #{expertNm}
				 , #{genderCd}
				 , #{nativeYn}
				 , #{encBrthdy}
				 , #{encMbtlnum}
				 , #{encEmail}
				 , #{wrcNm}
				 , #{deptNm}
				 , #{ofcpsNm}
				 , #{dtyNm}
				 , #{wrcAdres}
				 , #{wrcAdresDetail}
				 , #{wrcAdresZip}
				 , #{wrcTelno}
				 , #{lastUnivNm}
				 , #{univDeptNm}
				 , #{actRealmCd}
				 , #{attachmentGroupId}
				 , #{expertReqstProcessSttusCd}
				 , #{memberId}
				 , #{creatorId}
				 , #{createdDt}
				 , #{updaterId}
				 , #{updatedDt}
				)
	</insert>

	<!-- memberId로 전문가 등록 여부  -->
	<select id="selectExpertSttusCd" resultType="String">
		/** UsptExpertDao.selectExpertSttusCd */
		 select a.expert_reqst_process_sttus_code
		  from (
					 select  ue.expert_reqst_process_sttus_code
					        , row_number() over (order by ue.creat_dt desc) as rn
					 from usp_api.uspt_expert ue
				   where ue.mber_id = #{memberId}
				) a
		  where a.rn = 1
	</select>

	<!-- 로그인 사용자의 전문가 분류ID 조회 -->
	<select id="selectExpertClId" resultType="String">
	/** UsptExpertDao.selectExpertClId */
		select uecm.expert_cl_id
		 from usp_api.uspt_expert ue
  inner join usp_api.uspt_expert_cl_mapng uecm
		   on ue.expert_id  = uecm.expert_id
 	  where 1=1
 	  <if test='memberId != null and memberId != ""'>
	     and ue.mber_id  = #{memberId}
	</if>
	<if test='expertId != null and expertId != ""'>
	     and ue.expert_id = #{expertId}
	</if>
</select>

<!-- 로그인 사용자의 전문가 ID 조회 -->
	<select id="selectExpertId" resultType="String">
	/** UsptExpertDao.selectExpertId */
		select ue.expert_id
		 from usp_api.uspt_expert ue
 	  where 1=1
 	  <if test='memberId != null and memberId != ""'>
	     and ue.mber_id  = #{memberId}
	</if>
</select>


<!-- ********************************************************전문가 신청 관리 admin *********************************************************** -->
	<!-- 전문가신청관리 목록 총건수 조회  -->
	<select id="selectExpertListCnt" resultType="long">
		/** UsptExpertDao.selectExpertReqstListCnt */
		select count(1)
		from (select  a.expert_id								/** 전문가ID */
						, a.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd	/*처리상태코드*/
						, usp_api.fn_cmm_get_code_nm('EXPERT_REQST_PROCESS_STTUS',a.expert_reqst_process_sttus_code) as expert_reqst_process_sttus_nm  /**  전문가신청처리상태명**/
					 	, a.expert_nm								/*전문가명*/
					 	 , a.sexdstn_code as gender_cd		/*성별코드(G:GENDER) */
						 , a.native_at 			as native_yn		/*내국인여부 */
					 	, a.wrc_nm									/*직장명*/
					 	, ofcps_nm   							/**직위명 */
					 	, to_char(a.creat_dt,'yyyy-mm-dd') 		as reqst_day					/*신청일**/
					 	, case when coalesce(a.native_at, true) = true then '내국인' else '외국인' end as native_nm
					 	, usp_api.fn_cmm_get_code_nm('GENDER', a.sexdstn_code) as gender_nm
				from usp_api.uspt_expert a
		  inner join uspt_expert_cl_mapng b
		            on a.expert_id  = b.expert_id
		  inner join (
							select a.expert_cl_id
						           , a.expert_cl_nm
						        from    usp_api.uspt_expert_cl  a
								inner join usp_api.uspt_expert_cl  b
								on   a.parnts_expert_cl_id = b.expert_cl_id
								inner join usp_api.uspt_expert_cl c
									on   b.parnts_expert_cl_id = c.expert_cl_id
							inner join 	usp_api.uspt_expert_cl_charger d
							   on  c.expert_cl_id = d.expert_cl_id
							    and d.mber_id =#{mberId}
							  where b.use_at= true
						) c
		         on  b.expert_cl_id = c.expert_cl_id
			 where 1 = 1
			   <if test='expertReqstYn =="Y"' >
		   		and a.mber_id   is not null
	   	   </if>
	   	   <if test='expertNm != null and expertNm != ""'>
		   		and a.expert_nm like '%' || #{expertNm} || '%'
	   	   </if>
	   	   <if test='wrcNm != null and wrcNm != ""'>
		   		and a.wrc_nm like '%' || #{wrcNm} || '%'
	   	   </if>
	   	   <if test='expertReqstProcessSttusCd != null and expertReqstProcessSttusCd != ""'>
		   		and a.expert_reqst_process_sttus_code = #{expertReqstProcessSttusCd}
	   	   </if>
	   	   <if test='reqstDayStart != null and reqstDayStart != "" and reqstDayEnd != null and reqstDayEnd != ""'>
				and to_char(a.creat_dt,'YYYYMMDD') between #{reqstDayStart} and #{reqstDayEnd}
		  </if>
		group by   a.expert_id, a.expert_reqst_process_sttus_code, a.expert_nm, a.sexdstn_code, a.native_at, a.wrc_nm, a.ofcps_nm, to_char(a.creat_dt,'yyyy-mm-dd'), a.native_at
	) d
	</select>

	<!-- 전문가신청관리 목록 조회  -->
	<select id="selectExpertList" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.getExpertReqstList */
		select d.*
         , row_number() over (order by d.reqst_day desc) as rn
		 from (select  a.expert_id								/** 전문가ID */
						, a.expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd	/*처리상태코드*/
						, usp_api.fn_cmm_get_code_nm('EXPERT_REQST_PROCESS_STTUS',a.expert_reqst_process_sttus_code) as expert_reqst_process_sttus_nm  /**  전문가신청처리상태명**/
					 	, a.expert_nm								/*전문가명*/
					 	 , a.sexdstn_code as gender_cd		/*성별코드(G:GENDER) */
						 , a.native_at 			as native_yn		/*내국인여부 */
					 	, a.wrc_nm									/*직장명*/
					 	, ofcps_nm   							/**직위명 */
					 	, to_char(a.creat_dt,'yyyy-mm-dd') 		as reqst_day					/*신청일**/
					 	, case when coalesce(a.native_at, true) = true then '내국인' else '외국인' end as native_nm
					 	, usp_api.fn_cmm_get_code_nm('GENDER', a.sexdstn_code) as gender_nm
				from usp_api.uspt_expert a
		  inner join uspt_expert_cl_mapng b
		            on a.expert_id  = b.expert_id
		  inner join (
							select a.expert_cl_id
						           , a.expert_cl_nm
						        from    usp_api.uspt_expert_cl  a
								inner join usp_api.uspt_expert_cl  b
								on   a.parnts_expert_cl_id = b.expert_cl_id
								inner join usp_api.uspt_expert_cl c
									on   b.parnts_expert_cl_id = c.expert_cl_id
							inner join 	usp_api.uspt_expert_cl_charger d
							   on  c.expert_cl_id = d.expert_cl_id
							    and d.mber_id =#{mberId}
							  where b.use_at= true
						) c
		         on  b.expert_cl_id = c.expert_cl_id
			 where 1 = 1
			   <if test='expertReqstYn =="Y"' >
		   		and a.mber_id   is not null
	   	   </if>
	   	   <if test='expertNm != null and expertNm != ""'>
		   		and a.expert_nm like '%' || #{expertNm} || '%'
	   	   </if>
	   	   <if test='wrcNm != null and wrcNm != ""'>
		   		and a.wrc_nm like '%' || #{wrcNm} || '%'
	   	   </if>
	   	   <if test='expertReqstProcessSttusCd != null and expertReqstProcessSttusCd != ""'>
		   		and a.expert_reqst_process_sttus_code = #{expertReqstProcessSttusCd}
	   	   </if>
	   	   <if test='reqstDayStart != null and reqstDayStart != "" and reqstDayEnd != null and reqstDayEnd != ""'>
				and to_char(a.creat_dt,'YYYYMMDD') between #{reqstDayStart} and #{reqstDayEnd}
		  </if>
		group by   a.expert_id, a.expert_reqst_process_sttus_code, a.expert_nm, a.sexdstn_code, a.native_at, a.wrc_nm, a.ofcps_nm, to_char(a.creat_dt,'yyyy-mm-dd'), a.native_at
		) d
		   offset #{beginRowNum} -1
		   limit #{itemsPerPage}
	</select>

	<select id="selectExpertList2" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.getExpertReqstList2 */
		select  expert_id
				 , expert_nm
				 , sexdstn_code as gender_cd
				 , fn_cmm_get_code_nm('GENDER', sexdstn_code) as gender_nm
				 , native_at 			as native_yn
				 , case when coalesce(native_at, true) = true then '내국인' else '외국인' end as native_nm
				 , encpt_brthdy as enc_brthdy
				 , encpt_mbtlnum as enc_mbtlnum
				 , encpt_email as enc_email
				 , wrc_nm
				 , dept_nm
				 , ofcps_nm
				 , job_nm  as dty_nm
				 , wrc_adres
				 , wrc_adres_detail
				 , wrc_adres_zip
				 , wrc_telno
				 , last_univ_nm
				 , univ_fcty_nm  			as univ_dept_nm
				 , act_realm_code  		as act_realm_cd
				 , atchmnfl_group_id 	as attachment_group_id
				 , expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
				 , creatr_id 	 as creator_id
				 , creat_dt 	 as created_dt
				 , updusr_id as updater_id
				 , updt_dt 	as updated_dt
				 , fn_cmm_get_code_nm('EXPERT_REQST_PROCESS_STTUS',expert_reqst_process_sttus_code) as expert_reqst_process_sttus_nm  /**  전문가신청처리상태명**/
				 , to_char(creat_dt ,'YYYY-MM-DD')  as  reg_dt             /** 생성일시**/
				 , mber_id  as member_id
		from usp_api.uspt_expert
		 where 1 = 1
		    <if test='expertReqstProcessSttusCd != null and expertReqstProcessSttusCd != ""'>
		   		and expert_reqst_process_sttus_code  = #{expertReqstProcessSttusCd}
	   	   </if>
	</select>

	<select id="selectInsttNmList" resultType="aicluster.pms.common.entity.UsptExpert">
		select distinct trim(substring(trim(replace(replace(main.instt_nm,'(주)',''),'주식회사','')),0,4)) as wrc_nm
		  from (
		  		/*주관기업(공고 신청자)*/
				select usp_api.fn_cmm_get_member(s5.mber_id) as instt_nm  from usp_api.USPT_EVL_CMIT s1
					   inner join usp_api.uspt_brnh s2 on s2.brnh_id = s1.brnh_id
					   inner join usp_api.uspt_evl_step s3 on s3.evl_step_id  = s1.evl_step_id
					   inner join usp_api.uspt_evl_plan s4 on s4.evl_plan_id = s3.evl_plan_id
					   inner join usp_api.uspt_bsns_pblanc_applcnt s5 on s5.pblanc_id = s4.pblanc_id
				where s1.evl_cmit_id  = #{evlCmitId}
				  and s5.rcept_sttus_code = '${@aicluster.pms.common.util.Code@RS_COMPT_CODE}'
				union all
				/*참여기관(이해관계자의 등록된 기관명)*/
				select instt_nm
				  from usp_api.uspt_intprts
				 where evl_plan_id = (select s4.evl_plan_id
				   						from usp_api.uspt_evl_cmit s1
											 inner join usp_api.uspt_brnh s2 on s2.brnh_id = s1.brnh_id
											 inner join usp_api.uspt_evl_step s3 on s3.evl_step_id  = s1.evl_step_id
											 inner join usp_api.uspt_evl_plan s4 on s4.evl_plan_id = s3.evl_plan_id
									   where s1.evl_cmit_id  = #{evlCmitId})
				   and instt_nm is not null
			   ) main
	</select>


	<select id="selectExpertListByInsttNm" resultType="aicluster.pms.common.entity.UsptExpert">
		select expert_id
		  from usp_api.uspt_expert
	 	 where wrc_nm ~ #{wrcNm}
	</select>



	<!-- 전문가신청관리 전문가 정보 단건 조회 -->
	<select id="selectOneExpert" resultType="aicluster.pms.common.entity.UsptExpert">
		/** UsptExpertDao.getExpertReqstList */
		select   expert_id
				 , expert_nm
				 , sexdstn_code as gender_cd
				 , fn_cmm_get_code_nm('GENDER', sexdstn_code) as gender_nm
				 , native_at 			as native_yn
				 , case when coalesce(native_at, true) = true then '내국인' else '외국인' end as native_nm
				 , encpt_brthdy as enc_brthdy
				 , encpt_mbtlnum as enc_mbtlnum
				 , encpt_email as enc_email
				 , wrc_nm
				 , dept_nm
				 , ofcps_nm
				 , job_nm  as dty_nm
				 , wrc_adres
				 , wrc_adres_detail
				 , wrc_adres_zip
				 , wrc_telno
				 , last_univ_nm
				 , univ_fcty_nm  			as univ_dept_nm
				 , act_realm_code  		as act_realm_cd
				 , atchmnfl_group_id 	as attachment_group_id
				 , expert_reqst_process_sttus_code  as expert_reqst_process_sttus_cd
				 , creatr_id 	 as creator_id
				 , creat_dt 	 as created_dt
				 , updusr_id as updater_id
				 , updt_dt 	as updated_dt
				 , fn_cmm_get_code_nm('EXPERT_REQST_PROCESS_STTUS',expert_reqst_process_sttus_code) as expert_reqst_process_sttus_nm  /**  전문가신청처리상태명**/
				 , to_char(creat_dt ,'YYYY-MM-DD')  as  reg_dt             /** 생성일시**/
				 , mber_id  as member_id
		from usp_api.uspt_expert
	  where  expert_id =  #{expertId}
	</select>

	<!-- 전문가신청관리 승인, 반려 변경  -->
	<update id="updateExpertReturn">
	/** UsptExpertDao.updateExpertReqstReturn */
		update usp_api.uspt_expert
			 set  expert_reqst_process_sttus_code = #{expertReqstProcessSttusCd}
			      , updusr_id                = #{updaterId}
				  , updt_dt                = #{updatedDt}
        where  expert_id = #{expertId}
	</update>

	<!-- 전문가정보 변경-->
	<update id="update">
	/** UsptExpertDao.update */
		update usp_api.uspt_expert
			 set expert_nm                 = #{expertNm}
				, sexdstn_code              = #{genderCd}
				, native_at                 	 = #{nativeYn}
				, encpt_brthdy              = #{encBrthdy}
				, encpt_mbtlnum          = #{encMbtlnum}
				, encpt_email              = #{encEmail}
				 ,wrc_nm                    = #{wrcNm}
				, dept_nm                   = #{deptNm}
				, ofcps_nm                  = #{ofcpsNm}
				, job_nm                    = #{dtyNm}
				, wrc_adres                 = #{wrcAdres}
				, wrc_adres_detail          = #{wrcAdresDetail}
				, wrc_adres_zip             = #{wrcAdresZip}
				, wrc_telno                 = #{wrcTelno}
				, last_univ_nm              = #{lastUnivNm}
				, univ_fcty_nm            = #{univDeptNm}
				, atchmnfl_group_id      = #{attachmentGroupId}
				, expert_reqst_process_sttus_code  = #{expertReqstProcessSttusCd}
				, updusr_id                = #{updaterId}
				, updt_dt                = #{updatedDt}
		where  expert_id = #{expertId}
	</update>

	<!-- 전문가정보 삭제-->
	<delete  id="delete">
	/** UsptExpertDao.delete */
		delete from usp_api.uspt_expert
		where  expert_id = #{expertId}
	</delete>

	<!-- 전문가 매칭이력 건수-->
	<select id="selectExpertMatchHistListCnt" resultType="long">
		/** UsptExpertDao.selectExpertMatchHistListCnt */
		select count(1) as cnt
		from (
				select ex.reg_dt						 /*매칭일*/
						, bsns.bsns_year				/*사업연도*/
						, bsns.bsns_nm					/*사업명*/
						, bsns.pblanc_id 				/*공고ID*/
						, bsns.pblanc_nm				/*공고명*/
						, bsns.pblanc_no 				/*공고번호*/
						, ex.act_realm 					/*활동분양*/
						, ex.brnh_id as sect_id 		/*분과ID*/
						, evl.rcept_ordr as rcept_odr 					/*접수차수*/
				from	(   select a.evl_cmit_id 												/*평가위원회ID*/
									, a.brnh_id 													/*분과ID*/
									, to_char(b.creat_dt,'yyyymmdd') as reg_dt 		/*매칭일*/
							       , '평가위원'  			as act_realm 						/*활동분양*/
							from  usp_api.uspt_evl_cmit  a 					/*평가위원회*/
				  	 inner join usp_api.uspt_evl_mfcmm  b 				/*평가위원*/
							   on a.evl_cmit_id = b.evl_cmit_id
					  	     and a.evl_sttus_code = 'EVST03'
					 inner join usp_api.uspt_expert  c  						/*전문가*/
							   on  b.expert_id  = c.expert_id
							  and c.expert_id=#{expertId}
						) ex
				inner join (
							select  a.pblanc_id 							/*공고ID*/
							 		 , a.evl_plan_id 						/*평가계획ID*/
							   		, a.evl_sttus_code 						/*평가진행상태코드(G:EVL_STTUS)*/
							   		, a.rcept_ordr 							/*접수차수*/
							   		, b.brnh_id 								/*분과ID*/
							 from usp_api.uspt_evl_plan a 					/*평가계획*/
					 inner join usp_api.uspt_brnh  b 							/*분과정보*/
								on a.evl_plan_id = b.evl_plan_id
							  and a.evl_sttus_code = 'EVST03'
						) evl
					on ex.brnh_id = evl.brnh_id
				inner join (
							select a.bsns_code 				/*사업코드*/
									, a.bsns_year			/*사업연도*/
									, a.bsns_nm				/*사업명*/
									, b.pblanc_id 			/*공고ID*/
									, b.pblanc_nm			/*공고명*/
									, b.pblanc_no 			/*공고번호*/
							from usp_api.uspt_bsns a 				/*사업*/
					inner join  usp_api.uspt_bsns_pblanc b /*사업공고*/
					 		 on  a.bsns_code = b.bsns_code
					) bsns
					on evl.pblanc_id = bsns.pblanc_id
				group by 	ex.reg_dt				 /*매칭일*/
						, bsns.bsns_year				/*사업연도*/
						, bsns.bsns_nm					/*사업명*/
						, bsns.pblanc_id 				/*공고ID*/
						, bsns.pblanc_nm				/*공고명*/
						, bsns.pblanc_no 				/*공고번호*/
						, ex.act_realm 					/*활동분양*/
						, ex.brnh_id 						/*분과ID*/
						, evl.rcept_ordr 					/*접수차수*/
				) totCnt
	</select>

	<!-- 전문가 매칭이력 list-->
	<select id="selectExpertMatchHistList" resultType="aicluster.pms.common.entity.UsptExpert">
	/** UsptExpertDao.selectExpertMatchHistList */
		select ex.reg_dt						 /*매칭일*/
				, bsns.bsns_year				/*사업연도*/
				, bsns.bsns_nm					/*사업명*/
				, bsns.pblanc_id 				/*공고ID*/
				, bsns.pblanc_nm				/*공고명*/
				, bsns.pblanc_no 				/*공고번호*/
				, ex.act_realm 					/*활동분양*/
				, ex.brnh_id as sect_id 		/*분과ID*/
				, evl.rcept_ordr as rcept_odr 					/*접수차수*/
				 , row_number() over (order by ex.reg_dt desc) as rn
		from	(   select a.evl_cmit_id 												/*평가위원회ID*/
							, a.brnh_id 													/*분과ID*/
							, to_char(b.creat_dt,'yyyymmdd') as reg_dt 		/*매칭일*/
					       , '평가위원'  			as act_realm 						/*활동분양*/
					from  usp_api.uspt_evl_cmit  a 					/*평가위원회*/
		  	 inner join usp_api.uspt_evl_mfcmm  b 				/*평가위원*/
					   on a.evl_cmit_id = b.evl_cmit_id
			  	     and a.evl_sttus_code = 'EVST03'
			 inner join usp_api.uspt_expert  c  						/*전문가*/
					   on  b.expert_id  = c.expert_id
					  and c.expert_id=#{expertId}
			) ex
		inner join (
					select  a.pblanc_id 							/*공고ID*/
					 		 , a.evl_plan_id 						/*평가계획ID*/
					   		, a.evl_sttus_code 						/*평가진행상태코드(G:EVL_STTUS)*/
					   		, a.rcept_ordr 							/*접수차수*/
					   		, b.brnh_id 								/*분과ID*/
					 from usp_api.uspt_evl_plan a 					/*평가계획*/
			 inner join usp_api.uspt_brnh  b 							/*분과정보*/
						on a.evl_plan_id = b.evl_plan_id
					  and a.evl_sttus_code = 'EVST03'
				) evl
			on ex.brnh_id = evl.brnh_id
		inner join (
					select a.bsns_code 				/*사업코드*/
							, a.bsns_year			/*사업연도*/
							, a.bsns_nm				/*사업명*/
							, b.pblanc_id 			/*공고ID*/
							, b.pblanc_nm			/*공고명*/
							, b.pblanc_no 			/*공고번호*/
					from usp_api.uspt_bsns a 				/*사업*/
			inner join  usp_api.uspt_bsns_pblanc b /*사업공고*/
			 		 on  a.bsns_code = b.bsns_code
			) bsns
			on evl.pblanc_id = bsns.pblanc_id
		group by 	ex.reg_dt				 /*매칭일*/
				, bsns.bsns_year				/*사업연도*/
				, bsns.bsns_nm					/*사업명*/
				, bsns.pblanc_id 				/*공고ID*/
				, bsns.pblanc_nm				/*공고명*/
				, bsns.pblanc_no 				/*공고번호*/
				, ex.act_realm 					/*활동분양*/
				, ex.brnh_id 						/*분과ID*/
				, evl.rcept_ordr 					/*접수차수*/
		<if test="!isExcel">
			offset #{beginRowNum} -1
			limit #{itemsPerPage}
		</if>
	</select>

</mapper>